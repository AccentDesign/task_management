{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/avatar.component.html","webpack:///./src/app/components/avatar.component.ts","webpack:///./src/app/components/calendar.component.ts","webpack:///./src/app/components/client-list.component.html","webpack:///./src/app/components/client-list.component.ts","webpack:///./src/app/components/not-found.component.html","webpack:///./src/app/components/not-found.component.ts","webpack:///./src/app/components/report-list.component.html","webpack:///./src/app/components/report-list.component.ts","webpack:///./src/app/components/search.component.ts","webpack:///./src/app/components/task-board-filter.component.html","webpack:///./src/app/components/task-board-filter.component.ts","webpack:///./src/app/components/task-board.component.html","webpack:///./src/app/components/task-board.component.ts","webpack:///./src/app/components/task-card.component.html","webpack:///./src/app/components/task-card.component.ts","webpack:///./src/app/components/task-create-form.component.html","webpack:///./src/app/components/task-create-form.component.ts","webpack:///./src/app/components/task-form.component.html","webpack:///./src/app/components/task-form.component.ts","webpack:///./src/app/components/time-entry-form.component.html","webpack:///./src/app/components/time-entry-form.component.ts","webpack:///./src/app/components/time-sheet-signoff.component.ts","webpack:///./src/app/components/time-sheet.component.html","webpack:///./src/app/components/time-sheet.component.ts","webpack:///./src/app/directives/auto-resize.directive.ts","webpack:///./src/app/forms/base.form.ts","webpack:///./src/app/forms/task-assignee.form.ts","webpack:///./src/app/forms/task-create.form.ts","webpack:///./src/app/forms/task-description.form.ts","webpack:///./src/app/forms/task-job.form.ts","webpack:///./src/app/forms/task-note.form.ts","webpack:///./src/app/forms/task-target-date.form.ts","webpack:///./src/app/forms/task-title.form.ts","webpack:///./src/app/forms/time-entry.form.ts","webpack:///./src/app/pipes/client-search.pipe.ts","webpack:///./src/app/services/api.ts","webpack:///./src/app/services/globals.ts","webpack:///./src/app/state/actions/client.ts","webpack:///./src/app/state/actions/data.ts","webpack:///./src/app/state/actions/filters.ts","webpack:///./src/app/state/actions/http.ts","webpack:///./src/app/state/actions/index.ts","webpack:///./src/app/state/actions/job.ts","webpack:///./src/app/state/actions/me.ts","webpack:///./src/app/state/actions/task.ts","webpack:///./src/app/state/actions/taskassignee.ts","webpack:///./src/app/state/actions/tasknote.ts","webpack:///./src/app/state/actions/taskstatus.ts","webpack:///./src/app/state/actions/timedailysignoff.ts","webpack:///./src/app/state/actions/timeentry.ts","webpack:///./src/app/state/actions/user.ts","webpack:///./src/app/state/api.ts","webpack:///./src/app/state/effects/client.ts","webpack:///./src/app/state/effects/data.ts","webpack:///./src/app/state/effects/index.ts","webpack:///./src/app/state/effects/job.ts","webpack:///./src/app/state/effects/me.ts","webpack:///./src/app/state/effects/task.ts","webpack:///./src/app/state/effects/taskassignee.ts","webpack:///./src/app/state/effects/tasknote.ts","webpack:///./src/app/state/effects/taskstatus.ts","webpack:///./src/app/state/effects/timedailysignoff.ts","webpack:///./src/app/state/effects/timeentry.ts","webpack:///./src/app/state/effects/user.ts","webpack:///./src/app/state/generics.ts","webpack:///./src/app/state/reducers/client.ts","webpack:///./src/app/state/reducers/filter.ts","webpack:///./src/app/state/reducers/job.ts","webpack:///./src/app/state/reducers/me.ts","webpack:///./src/app/state/reducers/task.ts","webpack:///./src/app/state/reducers/taskassignee.ts","webpack:///./src/app/state/reducers/tasknote.ts","webpack:///./src/app/state/reducers/taskstatus.ts","webpack:///./src/app/state/reducers/timedailysignoff.ts","webpack:///./src/app/state/reducers/timeentry.ts","webpack:///./src/app/state/reducers/user.ts","webpack:///./src/app/state/selectors/job.ts","webpack:///./src/app/state/selectors/task.ts","webpack:///./src/app/state/selectors/taskboard.ts","webpack:///./src/app/state/selectors/timeentry.ts","webpack:///./src/app/state/selectors/timesheet.ts","webpack:///./src/app/state/selectors/user.ts","webpack:///./src/app/state/state.ts","webpack:///./src/app/utils/generic.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<header>\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <a routerLink=\\\"\\\" class=\\\"nav-home mt-1\\\"><img src=\\\"{{ globals.appJSRoot }}assets/images/task-management-logo.svg\\\" width=\\\"35\\\" height=\\\"35\\\"></a>\\n        <ul class=\\\"nav\\\">\\n            <li><a routerLink=\\\"\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Taskboard</a></li>\\n            <li><a routerLink=\\\"clients\\\" routerLinkActive=\\\"active\\\">Clients</a></li>\\n            <li><a routerLink=\\\"timesheet\\\" routerLinkActive=\\\"active\\\">Timesheet</a></li>\\n            <li><a routerLink=\\\"reporting\\\" routerLinkActive=\\\"active\\\">Reporting</a></li>\\n        </ul>\\n        <div class=\\\"ml-auto\\\" *ngIf=\\\"me$ | async as me\\\">\\n            <a avatar [id]=\\\"me.id\\\" class=\\\"avatar\\\" href=\\\"{{ globals.logoutUrl }}\\\">\\n                <i class=\\\"avatar-close icon-cancel\\\"></i>\\n            </a>\\n        </div>\\n    </div>\\n</header>\\n<router-outlet></router-outlet>\"","import { AppState, getMeState } from './state/state';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { Globals } from './services/globals';\nimport { IMe } from './state/reducers/me';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class AppComponent implements OnInit {\n\n    me$: Observable<IMe>;\n\n    constructor(\n        public globals: Globals,\n        public store: Store<AppState>\n    ) { }\n\n    ngOnInit() {\n        this.me$ = this.store.pipe(select(getMeState))\n    }\n\n}\n","import * as actions from './state/actions';\n\nimport { AppState, reducers } from './state/state';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { Store, StoreModule } from '@ngrx/store';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { AutoResizeDirective } from './directives/auto-resize.directive';\nimport { AvatarComponent } from './components/avatar.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CalendarComponent } from './components/calendar.component';\nimport { ClientListComponent } from './components/client-list.component';\nimport { ClientSearchPipe } from './pipes/client-search.pipe';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgModule } from '@angular/core';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\nimport { NotFoundComponent } from './components/not-found.component';\nimport { ReportListComponent } from './components/report-list.component';\nimport { RouterModule } from '@angular/router';\nimport { SearchComponent } from './components/search.component';\nimport { TaskCardComponent } from './components/task-card.component';\nimport { TaskCreateFormComponent } from './components/task-create-form.component';\nimport { TaskFormComponent } from './components/task-form.component';\nimport { TaskboardComponent } from './components/task-board.component';\nimport { TaskboardFilterComponent } from './components/task-board-filter.component';\nimport { TimeEntryFormComponent } from './components/time-entry-form.component';\nimport { TimesheetComponent } from './components/time-sheet.component';\nimport { TimesheetSignoffComponent } from './components/time-sheet-signoff.component';\nimport { effects } from './state/effects';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AutoResizeDirective,\n        AvatarComponent,\n        CalendarComponent,\n        ClientListComponent,\n        ClientSearchPipe,\n        NotFoundComponent,\n        ReportListComponent,\n        SearchComponent,\n        TaskboardComponent,\n        TaskboardFilterComponent,\n        TaskCardComponent,\n        TaskCreateFormComponent,\n        TaskFormComponent,\n        TimeEntryFormComponent,\n        TimesheetComponent,\n        TimesheetSignoffComponent\n    ],\n    imports: [\n        AppRoutingModule,\n        BrowserModule,\n        EffectsModule.forRoot(effects),\n        FormsModule,\n        HttpClientModule,\n        HttpClientXsrfModule.withOptions({\n            cookieName: 'csrftoken',\n            headerName: 'X-CSRFTOKEN'\n        }),\n        NgxDnDModule,\n        ReactiveFormsModule,\n        RouterModule,\n        StoreModule.forRoot(reducers)\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n    constructor(public store: Store<AppState>) {\n        store.dispatch({ type: actions.DataActions.LOAD_DATA });\n    }\n    \n}\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { ClientListComponent } from './components/client-list.component';\nimport { NgModule } from '@angular/core';\nimport { NotFoundComponent } from './components/not-found.component';\nimport { ReportListComponent } from './components/report-list.component';\nimport { TaskboardComponent } from './components/task-board.component';\nimport { TimesheetComponent } from './components/time-sheet.component';\n\nconst routes: Routes = [\n    { path: '', component: TaskboardComponent },\n    { path: 'clients', component: ClientListComponent},\n    { path: 'reporting', component: ReportListComponent},\n    { path: 'timesheet', component: TimesheetComponent},\n    { path: '404', component: NotFoundComponent },\n    { path: '**', redirectTo: '/404' }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class AppRoutingModule { }","module.exports = \"<div class=\\\"avatar-text\\\">{{ (user | async)?.initials }}</div>\\n<ng-content></ng-content>\"","import * as _ from 'lodash';\n\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { IUser } from '../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { getUserById } from '../state/selectors/user';\n\n@Component({\n    selector: '[avatar]',\n    templateUrl: './avatar.component.html'\n})\nexport class AvatarComponent implements OnChanges {\n    @Input() id: number;\n\n    user: Observable<IUser>;\n\n    constructor(private store: Store<AppState>) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.user = this.store.pipe(select(getUserById(this.id)));\n        }\n    }\n}\n\n","import {\n    AfterViewChecked,\n    Component,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { Calendar, Draggable } from 'fullcalendar'\n\nimport EventApi from 'fullcalendar/EventApi';\n\nexport interface ViewSkeletonRenderInfo {\n    view: any;\n    el: HTMLElement;\n}\n\nexport interface DatesRenderInfo {\n    view: any;\n    el: HTMLElement;\n}\n\nexport interface DropInfo {\n    date: Date;\n    draggedEl: HTMLElement;\n    jsEvent: Event;\n    view: any;\n    allDay: boolean;\n}\n\nexport interface EventDropInfo {\n    event: EventApi;\n    prevEvent: EventApi;\n    el: HTMLElement;\n    delta: any;\n    revert: Function;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventResizeInfo {\n    event: EventApi;\n    prevEvent: EventApi;\n    el: HTMLElement;\n    startDelta: any;\n    endDelta: any;\n    revert: Function;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventClickInfo {\n    event: EventApi;\n    el: HTMLElement;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventObject {\n    id?: string;\n    groupId?: string;\n    allDay?: boolean;\n    start: Date;\n    end?: Date;\n    title: string;\n    url?: string;\n    classNames?: string[];\n    editable?: boolean;\n    startEditable?: boolean;\n    durationEditable?: boolean;\n    resourceEditable?: boolean;\n    rendering?: '' | 'background' | 'inverse-background';\n    overlap?: boolean | Function;\n    constraint?: any;\n    backgroundColor?: string;\n    borderColor?: string;\n    textColor?: string;\n    extendedProps?: any;\n    source?: any;\n}\n\nexport interface CalendarOptions {\n    header?: any;\n    isRTL?: boolean;\n    weekends?: boolean;\n    hiddenDays?: number[];\n    firstDay?: number;\n    fixedWeekCount?: boolean;\n    weekNumbers?: boolean;\n    businessHours?: any;\n    height?: any;\n    contentHeight?: any;\n    aspectRatio?: number;\n    eventLimit?: any;\n    defaultDate?: any;\n    locale?: string;\n    timezone?: boolean | string;\n    timeFormat?: string | null;\n    editable?: boolean;\n    droppable?: boolean;\n    eventStartEditable?: boolean;\n    eventDurationEditable?: boolean;\n    defaultView?: string;\n    allDaySlot?: boolean;\n    allDayText?: string;\n    slotDuration?: any;\n    slotLabelInterval?: any;\n    snapDuration?: any;\n    defaultTimedEventDuration?: any;\n    scrollTime?: any;\n    minTime?: any;\n    maxTime?: any;\n    slotEventOverlap?: boolean;\n    nowIndicator?: boolean;\n    dragRevertDuration?: number;\n    dragOpacity?: number;\n    dragScroll?: boolean;\n    eventOverlap?: any;\n    eventConstraint?: any;\n    dayRender?: Function;\n    navLinks?: boolean;\n}\n\nconst defaultConfig: CalendarOptions = {\n    aspectRatio: 1.35,\n    defaultView: 'month',\n    slotDuration: '00:30:00',\n    scrollTime: '06:00:00',\n    minTime: '00:00:00',\n    maxTime: '24:00:00',\n    slotEventOverlap: true,\n    dragRevertDuration: 500,\n    dragOpacity: .75,\n    dragScroll: true,\n    timezone: false,\n    timeFormat: null\n};\n  \n@Component({\n    selector: 'calendar, [calendar]',\n    template: ``\n})\nexport class CalendarComponent implements OnInit, OnDestroy, AfterViewChecked, DoCheck, OnChanges {\n\n    @Input() externalEventsWrapperId: string = 'fc-event-wrapper';\n    @Input() externalEventItemClass: string = '.fc-event';\n    @Input() options: CalendarOptions;\n    @Input() events: EventObject[];\n    @Input() header: any;\n    @Input() isRTL: boolean;\n    @Input() weekends: boolean;\n    @Input() hiddenDays: number[];\n    @Input() fixedWeekCount: boolean;\n    @Input() weekNumbers: boolean;\n    @Input() businessHours: any;\n    @Input() height: any;\n    @Input() contentHeight: any;\n    @Input() aspectRatio: number;\n    @Input() eventLimit: any;\n    @Input() defaultDate: any;\n    @Input() editable: boolean;\n    @Input() droppable: boolean;\n    @Input() eventStartEditable: boolean;\n    @Input() eventDurationEditable: boolean;\n    @Input() defaultView: string;\n    @Input() allDaySlot: boolean;\n    @Input() allDayText: string;\n    @Input() slotDuration: any;\n    @Input() slotLabelInterval: any;\n    @Input() snapDuration: any;\n    @Input() scrollTime: any;\n    @Input() minTime: any;\n    @Input() maxTime: any;\n    @Input() slotEventOverlap: boolean;\n    @Input() nowIndicator: boolean;\n    @Input() dragRevertDuration: number;\n    @Input() dragOpacity: number;\n    @Input() dragScroll: boolean;\n    @Input() eventOverlap: any;\n    @Input() eventConstraint: any;\n    @Input() locale: string;\n    @Input() timezone: boolean | string;\n    @Input() timeFormat: string | null;\n    @Input() dayRender: Function;\n    @Input() navLinks: boolean;\n  \n    // tslint:disable:no-output-on-prefix\n    @Output() onViewSkeletonRender: EventEmitter<ViewSkeletonRenderInfo> = new EventEmitter<ViewSkeletonRenderInfo>();\n    @Output() onDatesRender: EventEmitter<DatesRenderInfo> = new EventEmitter<DatesRenderInfo>();\n    @Output() onDrop: EventEmitter<DropInfo> = new EventEmitter<DropInfo>();\n    @Output() onEventDrop: EventEmitter<EventDropInfo> = new EventEmitter<EventDropInfo>();\n    @Output() onEventClick: EventEmitter<EventClickInfo> = new EventEmitter<EventClickInfo>();\n    @Output() onEventResize: EventEmitter<EventResizeInfo> = new EventEmitter<EventResizeInfo>();\n    // tslint:enable:no-output-on-prefix\n  \n    calendar: any;\n    initialized: boolean;\n    eventDiffer: any;\n    config: any;\n  \n    constructor(private el: ElementRef, differs: IterableDiffers) {\n        this.eventDiffer = differs.find([]).create(null);\n        this.initialized = false;\n    }\n  \n    ngOnInit() {\n        this.config = this.safeGenerateConfig();\n\n        this.config.viewSkeletonRender = (info: ViewSkeletonRenderInfo) => {\n            this.onViewSkeletonRender.emit(info);\n        };\n\n        this.config.datesRender = (info: DatesRenderInfo) => {\n            this.onDatesRender.emit(info);\n        };\n\n        this.config.drop = (info: DropInfo) => {\n            this.onDrop.emit(info);\n        };\n\n        this.config.eventDrop = (info: EventDropInfo) => {\n            this.onEventDrop.emit(info);\n        };\n\n        this.config.eventResize = (info: EventResizeInfo) => {\n            this.onEventResize.emit(info);\n        };\n        \n        this.config.eventClick = (info: EventClickInfo) => {\n            this.onEventClick.emit(info);\n        };\n    }\n  \n    ngOnDestroy() {\n        if (this.calendar) {\n            this.calendar.destroy();\n            this.initialized = false;\n            this.calendar = null;\n        }\n    }\n  \n    ngOnChanges(changes: SimpleChanges) {\n        if (this.calendar) {\n            for (const propName in changes) {\n                if (propName !== 'events') {\n                    this.calendar.option(propName, changes[propName].currentValue);\n                }\n            }\n        }\n    }\n  \n    ngAfterViewChecked() {\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\n            this.initialize();\n        }\n    }\n  \n    ngDoCheck() {\n        const eventChanges = this.eventDiffer.diff(this.events);\n        if (this.calendar && eventChanges) {\n            const sources = this.calendar.getEventSources();\n            sources.forEach(source => { source.remove(); });\n            if (this.events) {\n                this.calendar.addEventSource(this.events);\n            }\n        }\n    }\n  \n    private initialize() {\n        this.calendar = new Calendar(this.el.nativeElement, this.config);\n\n        const externalEventsEl = document.getElementById(this.externalEventsWrapperId);\n\n        new Draggable(externalEventsEl, {\n            itemSelector: this.externalEventItemClass\n        });\n\n        this.calendar.render();\n\n        if (this.events) {\n            this.calendar.addEventSource(this.events);\n        }\n        \n        this.initialized = true;\n    }\n  \n    private safeGenerateConfig() {\n        const configFromAttrs = {\n            // tslint:disable:no-non-null-assertion\n            header: this.header!,\n            isRTL: this.isRTL!,\n            weekends: this.weekends!,\n            hiddenDays: this.hiddenDays!,\n            fixedWeekCount: this.fixedWeekCount!,\n            weekNumbers: this.weekNumbers!,\n            businessHours: this.businessHours!,\n            height: this.height!,\n            contentHeight: this.contentHeight!,\n            aspectRatio: this.aspectRatio!,\n            eventLimit: this.eventLimit!,\n            defaultDate: this.defaultDate!,\n            locale: this.locale!,\n            timezone: this.timezone!,\n            timeFormat: this.timeFormat!,\n            editable: this.editable!,\n            droppable: this.droppable!,\n            eventStartEditable: this.eventStartEditable!,\n            eventDurationEditable: this.eventDurationEditable!,\n            defaultView: this.defaultView!,\n            allDaySlot: this.allDaySlot!,\n            allDayText: this.allDayText!,\n            slotDuration: this.slotDuration!,\n            slotLabelInterval: this.slotLabelInterval!,\n            snapDuration: this.snapDuration!,\n            scrollTime: this.scrollTime!,\n            minTime: this.minTime!,\n            maxTime: this.maxTime!,\n            slotEventOverlap: this.slotEventOverlap!,\n            nowIndicator: this.nowIndicator!,\n            dragRevertDuration: this.dragRevertDuration!,\n            dragOpacity: this.dragOpacity!,\n            dragScroll: this.dragScroll!,\n            eventOverlap: this.eventOverlap!,\n            eventConstraint: this.eventConstraint!,\n            dayRender: this.dayRender!,\n            navLinks: this.navLinks!,\n            // tslint:enable:no-non-null-assertion\n        };\n    \n        return {\n            ...defaultConfig,\n            ...this.removeUndefinedProperties(this.options),\n            ...this.removeUndefinedProperties(configFromAttrs)\n        };\n    }\n  \n    removeUndefinedProperties<T>(object: Object): T {\n        return JSON.parse(JSON.stringify(typeof object === 'object' ? object : {}));\n    }\n  \n}","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Clients</div>\\n        <div class=\\\"page-header-actions\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid inner-content\\\">\\n    <div class=\\\"panel\\\">\\n        <search [(ngModel)]=\\\"searchTerms\\\"></search>\\n        <table class=\\\"table-headed table-hover margin-zero layout-fixed\\\">\\n            <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Email Address</th>\\n                    <th>Phone Number</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let client of clients$ | async | clientSearch:searchTerms\\\">\\n                    <td>{{ client.name }}</td>\\n                    <td>{{ client.email_address }}</td>\\n                    <td>{{ client.phone_number }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { IClient } from './../state/reducers/client';\nimport { Observable } from 'rxjs';\nimport { getClientState } from './../state/state';\n\n@Component({\n    selector: 'client-list, [client-list]',\n    templateUrl: './client-list.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class ClientListComponent implements OnInit {\n\n    searchTerms: string[] = [];\n    clients$: Observable<IClient[]>;\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnInit() {\n        this.clients$ = this.store.pipe(select(getClientState))\n    }\n}\n","module.exports = \"<div class=\\\"full-visual-height d-flex align-items-center\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 text-center\\\">\\n                <p><img src=\\\"{{ globals.appJSRoot }}assets/images/task-management-logo.svg\\\"></p>\\n                <p><strong>404</strong></p>\\n                <p>Where's the page, Lebowski?, Where’s the page? ...</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Globals } from '../services/globals';\n\n@Component({\n    templateUrl: './not-found.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class NotFoundComponent {\n\n    constructor(public globals: Globals) { }\n\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Reporting</div>\\n        <div class=\\\"page-header-actions\\\"></div>\\n    </div>\\n</div>\"","import { AppState } from '../state/state';\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Component({\n    selector: 'report-list, [report-list]',\n    templateUrl: './report-list.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class ReportListComponent {\n\n    constructor(private store: Store<AppState>) { }\n\n}\n","import { Component, Input, forwardRef } from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst noop = () => {};\n\nconst SEARCH_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SearchComponent),\n  multi: true\n};\n\n@Component({\n    selector: 'search, [search]',\n    template: `\n    <div class=\"icon-input\">\n        <input name=\"search\" type=\"search\" placeholder=\"Search\" [(ngModel)]=\"searchVal\" (ngModelChange)=\"searchChange($event)\">\n        <span class=\"icon-search\"></span>\n    </div>\n    `,\n    providers: [SEARCH_CONTROL_VALUE_ACCESSOR]\n})\nexport class SearchComponent {\n\n    searchVal: string = '';\n    private _value: any = [];\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_:any) => void = noop;\n\n    get value(): any {\n        return this._value;\n    };\n\n    set value(value: any) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onChangeCallback(value);\n        }\n    }\n\n    onTouched(){\n        this._onTouchedCallback();\n    }\n\n    writeValue(value: any) {\n        this._value = value;\n        if (value) {\n            this.searchVal = value.join(\" \");\n        }\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    searchChange(value) {\n        if (value) {\n            this.value = value.split(\" \");\n        } else {\n            this.value = [];\n        }\n    }\n}\n","module.exports = \"<div class=\\\"filter-box\\\">\\n    <a class=\\\"pointer\\\" (click)=\\\"open=!open\\\">Filter <i class=\\\"icon-down-open\\\"></i></a>\\n    <div class=\\\"filter-options\\\" *ngIf=\\\"open\\\">\\n        <label>User</label>\\n        <select [(ngModel)]=\\\"filters.user\\\" (ngModelChange)=\\\"onUserChange($event)\\\">\\n            <option *ngFor=\\\"let option of users$ | async\\\" [ngValue]=\\\"option.id\\\">{{ option.full_name }}</option>\\n        </select>\\n        <label>Client</label>\\n        <select [(ngModel)]=\\\"filters.client\\\" (ngModelChange)=\\\"onClientChange($event)\\\">\\n            <option [ngValue]=\\\"null\\\">---------</option>\\n            <option *ngFor=\\\"let option of clients$ | async\\\" [ngValue]=\\\"option.id\\\">{{ option.name }}</option>\\n        </select>\\n        <label>Job</label>\\n        <select [(ngModel)]=\\\"filters.job\\\" (ngModelChange)=\\\"onJobChange($event)\\\">\\n            <option [ngValue]=\\\"null\\\">---------</option>\\n            <ng-container *ngFor=\\\"let option of jobs$ | async\\\">\\n                <option *ngIf=\\\"option.client === filters.client\\\" [ngValue]=\\\"option.id\\\">{{ option.title }}</option>\\n            </ng-container>\\n        </select>\\n        <label>Overdue</label>\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"filters.overdue\\\" (ngModelChange)=\\\"onOverdueChange($event)\\\">\\n                <span></span>\\n            </label>\\n        </div>\\n    </div>\\n</div>\"","import * as actions from '../state/actions';\n\nimport { Component, Input } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { getClientState, getFilterState, getMeState, getUserState } from './../state/state';\n\nimport { AppState } from '../state/state';\nimport { IClient } from './../state/reducers/client';\nimport { IFilter } from './../state/reducers/filter';\nimport { IJob } from './../state/reducers/job';\nimport { IUser } from './../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { getJobCollection } from '../state/selectors/job';\n\n@Component({\n    selector: 'task-board-filter, [task-board-filter]',\n    templateUrl: './task-board-filter.component.html'\n})\nexport class TaskboardFilterComponent {\n    \n    @Input() client: number = null;\n    @Input() job: number = null;\n    @Input() user: number = null;\n    \n    users$: Observable<IUser[]>;\n    clients$: Observable<IClient[]>;\n    jobs$: Observable<IJob[]>;\n    \n    filters: IFilter;\n    open: boolean = false;\n    \n    constructor(private store: Store<AppState>) {\n        this.clients$ = store.pipe(select(getClientState));\n        this.jobs$ = store.pipe(select(getJobCollection));\n        this.users$ = store.pipe(select(getUserState));\n        this.store.pipe(select(getMeState)).subscribe(m => this.onUserChange(m.id));\n        this.store.pipe(select(getFilterState)).subscribe(f => this.filters = f);\n    }\n    \n    onClientChange(id: number) {\n        console.log(id);\n        this.store.dispatch({ type: actions.FilterActions.CLIENT, payload: id });\n        this.store.dispatch({ type: actions.FilterActions.JOB, payload: null });\n    }\n\n    onJobChange(id: number) {\n        this.store.dispatch({ type: actions.FilterActions.JOB, payload: id });\n    }\n\n    onOverdueChange(value: boolean) {\n        this.store.dispatch({ type: actions.FilterActions.OVERDUE, payload: value });\n    }\n\n    onUserChange(id: number) {\n        this.store.dispatch({ type: actions.FilterActions.USER, payload: id });\n    }\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center c-white\\\">\\n        <div class=\\\"h2 mr-2\\\">Taskboard</div>\\n        <ng-container *ngIf=\\\"this.statsForTaskboard$ | async as stats\\\">\\n            <div class=\\\"mr-2\\\"><strong>Number of tasks</strong> {{ stats.count_of_tasks }}</div>\\n            <div class=\\\"mr-2\\\"><strong>Allocated hours</strong> {{ stats.allocated_hours }}</div>\\n            <div><strong>Overdue tasks</strong> {{ stats.count_of_overdue }}</div>\\n        </ng-container>\\n        <div class=\\\"page-header-actions\\\">\\n            <task-board-filter></task-board-filter>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid d-flex flex-fill mt-2 mb-1 scroll-x\\\">\\n    <div class=\\\"board-column d-flex flex-fill\\\" *ngFor=\\\"let status of taskAssigneesForTaskboard$ | async\\\">\\n        <div class=\\\"board-column-heading d-flex mb-1\\\">\\n            <strong>{{ status.title }}</strong>\\n            <i class=\\\"icon-plus ml-auto\\\" (click)=\\\"openCreateForm(status)\\\"></i>\\n        </div>\\n        <div class=\\\"flex-fill board-card-wrapper\\\" \\n            ngxDroppable=\\\"status-column\\\" [model]=\\\"status._assignees\\\"\\n            (drop)=\\\"droppedIntoColumn(status, status._assignees)\\\">\\n            <div task-card [id]=\\\"assignee.task\\\"\\n                ngxDraggable [model]=\\\"assignee\\\"\\n                (click)=\\\"selectedTaskId=assignee.task\\\"\\n                *ngFor=\\\"let assignee of status._assignees\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>    \\n<task-create-form\\n    [opened]=\\\"createFormOpen\\\"\\n    [status]=\\\"createFormStatusId\\\"\\n    (close)=\\\"createFormOpen = false\\\"\\n    (saved)=\\\"selectedTaskId = $event.id\\\"\\n    *ngIf=\\\"createFormOpen\\\">\\n</task-create-form>\\n<task-form\\n    [id]=\\\"selectedTaskId\\\"\\n    (close)=\\\"selectedTaskId = null\\\"\\n    *ngIf=\\\"selectedTaskId\\\">\\n</task-form>\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { Store, select } from '@ngrx/store';\nimport { getStatsForTaskboard, getTaskAssigneesForTaskboard } from './../state/selectors/taskboard';\n\nimport { AppState } from '../state/state';\nimport { Component } from '@angular/core';\nimport { ITaskStatus } from '../state/reducers/taskstatus';\nimport { Observable } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'task-board, [task-board]',\n    templateUrl: './task-board.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class TaskboardComponent {\n    createFormOpen = false;\n    createFormStatusId: number;\n    selectedTaskId: number;\n    taskAssigneesForTaskboard$: Observable<any[]>;\n    statsForTaskboard$: Observable<any>;\n\n    constructor(private store: Store<AppState>) {\n        this.taskAssigneesForTaskboard$ = store.pipe(select(getTaskAssigneesForTaskboard), debounceTime(100));\n        this.statsForTaskboard$ = store.pipe(select(getStatsForTaskboard), debounceTime(100));\n    }\n\n    droppedIntoColumn(status: any, assignees: any) {\n        _.each(assignees, (assignee, i) => {\n            if (assignee._task.status != status.id) {\n                const payload = {id: assignee.task, status: status.id};\n                this.store.dispatch({type: actions.TaskActions.PATCH, payload})\n            }\n            const order = i+1;\n            if (assignee.order != order) {\n                const payload = {id: assignee.id, order: order};\n                this.store.dispatch({type: actions.TaskAssigneeActions.PATCH, payload});\n            }\n        });\n    }\n\n    openCreateForm(status: ITaskStatus) {\n        this.createFormStatusId = status.id;\n        this.createFormOpen = true;\n    }\n}\n","module.exports = \"<div class=\\\"board-card d-flex flex-column pointer\\\" *ngIf=\\\"task$ | async as task\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <span class=\\\"color-indicator\\\" [style.background]=\\\"task._job?.colour\\\"></span>\\n        <span class=\\\"small uppercase\\\"><strong>{{ task._job?._client?.name }} / {{ task._job?.title }}</strong></span>\\n    </div>\\n    <p class=\\\"board-card-desc\\\">{{ task.title }}</p>\\n    <div class=\\\"d-flex\\\">\\n        <div class=\\\"mr-auto\\\">\\n            <span class=\\\"uppercase mr-1\\\" [class.c-red]=\\\"task.is_overdue\\\" *ngIf=\\\"task.target_date\\\"><i class=\\\"icon-bell\\\"></i> {{ task.target_date | date:'d MMM' }}</span>\\n            <span class=\\\"uppercase\\\" [class.c-red]=\\\"task._is_over_allocated_hours\\\"><i class=\\\"icon-clock\\\"></i> {{ task._time_spent_hours }}/{{ task._allocated_hours }}</span>\\n        </div>\\n        <div>\\n            <div avatar [id]=\\\"assignee.user\\\" class=\\\"avatar avatar-small\\\" *ngFor=\\\"let assignee of task._assignees\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\"","import * as _ from 'lodash';\n\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { ITask } from '../state/reducers/task';\nimport { Observable } from 'rxjs';\nimport { getTaskCollectionById } from './../state/selectors/task';\n\n@Component({\n    selector: 'task-card, [task-card]',\n    templateUrl: './task-card.component.html'\n})\nexport class TaskCardComponent implements OnChanges {\n    @Input() id: number;\n\n    task$: Observable<ITask>;\n\n    constructor(private store: Store<AppState>) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.task$ = this.store.pipe(select(getTaskCollectionById(this.id)));\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal {{ opened ? 'in': '' }}\\\" (click)=\\\"closeEvent($event)\\\">\\n    <div class=\\\"modal-panel\\\" #modalPanel>\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row mb-2\\\">\\n                <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\" [formControl]=\\\"form.controls.title\\\" class=\\\"mb-0-5\\\" placeholder=\\\"Title\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-8\\\">\\n                    <div class=\\\"mb-2\\\">\\n                        <p class=\\\"mb-0-5\\\"><strong>Description</strong></p>\\n                        <textarea autoResize [formControl]=\\\"form.controls.description\\\" class=\\\"mb-0-5\\\" rows=\\\"2\\\"></textarea>\\n                    </div>\\n                    <button class=\\\"button\\\" (click)=\\\"form.save($event)\\\">Save</button>\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <p class=\\\"mb-0-5\\\"><strong>Job</strong></p>\\n                    <select class=\\\"full-width input-small\\\" [(ngModel)]=\\\"selectedClientId\\\" (change)=\\\"changeClient($event)\\\">\\n                        <option [value]=\\\"null\\\">Select...</option>\\n                        <option *ngFor=\\\"let option of clients$ | async\\\" [value]=\\\"option.id\\\">{{ option.name }}</option>\\n                    </select>\\n                    <select class=\\\"full-width input-small\\\" [formControl]=\\\"form.controls.job\\\">\\n                        <option [ngValue]=\\\"null\\\">Select...</option>\\n                        <ng-container *ngFor=\\\"let option of jobs$ | async\\\">\\n                            <option *ngIf=\\\"option.client == selectedClientId\\\" [ngValue]=\\\"option.id\\\">{{ option.title }}</option>\\n                        </ng-container>\\n                    </select>\\n                    <hr>\\n\\n                    <p class=\\\"mb-0-5\\\"><strong>Target Date</strong></p>\\n                    <input [formControl]=\\\"form.controls.target_date\\\" type=\\\"date\\\" class=\\\"input-small\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import * as _ from 'lodash';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { Component, ElementRef, EventEmitter, Input, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { getClientState, getJobState, getUserState } from './../state/state';\n\nimport { AppState } from '../state/state';\nimport { IClient } from '../state/reducers/client';\nimport { IFormActionResult } from '../forms/base.form';\nimport { IJob } from '../state/reducers/job';\nimport { IUser } from '../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { TaskCreateForm } from '../forms/task-create.form';\n\n@Component({\n    selector: 'task-create-form, [task-create-form]',\n    templateUrl: './task-create-form.component.html'\n})\nexport class TaskCreateFormComponent {\n    @Input() opened = false;\n    @Input() status: number;\n    \n    @Output() close = new EventEmitter();\n    @Output() saved = new EventEmitter();\n\n    @ViewChild('modalPanel') modalPanelRef: ElementRef;\n\n    users$: Observable<IUser[]>;\n    clients$: Observable<IClient[]>;\n    jobs$: Observable<IJob[]>;\n    form: TaskCreateForm;\n    selectedClientId: number = null; \n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.users$ = this.store.pipe(select(getUserState));\n        this.clients$ = this.store.pipe(select(getClientState));\n        this.jobs$ = this.store.pipe(select(getJobState));\n        this.form = new TaskCreateForm(this.store, this.actionsSubject);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'status.currentValue')) {\n            this.form.load({status: this.status});\n            this.form.formSaved.subscribe(\n                (e: IFormActionResult) => {\n                    this.close.emit(e.event);\n                    this.saved.emit(e.payload);\n                }\n            );\n        }\n    }\n\n    closeEvent(event) {\n        if (this.modalPanelRef.nativeElement.contains(event.target)) {\n            // inside modal - do not close\n        } else {\n            this.close.emit(event);\n        }\n    }\n\n    changeClient($event) {\n        this.selectedClientId = $event.target.value;\n        if ($event.target.value == 'null') {\n            this.form.controls.job.setValue(null);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal {{ id ? 'in': '' }}\\\" *ngIf=\\\"task$ | async as task\\\" (click)=\\\"closeEvent($event)\\\">\\n    <div class=\\\"modal-panel\\\" #modalPanel>\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row mb-2\\\">\\n                <div class=\\\"col-1 text-right\\\">\\n                    <span class=\\\"color-indicator mt-1\\\" [style.background]=\\\"task._job?.colour\\\"></span>\\n                </div>\\n                <div class=\\\"col-11\\\">\\n                    <div (click)=\\\"titleForm.editable = true\\\">\\n                        <input type=\\\"text\\\" [formControl]=\\\"titleForm.controls.title\\\" class=\\\"mb-0-5\\\">\\n                        <button class=\\\"input-group-addon button\\\" *ngIf=\\\"titleForm.editable\\\" (click)=\\\"titleForm.save($event)\\\">Save</button>\\n                        <button class=\\\"button button-clear\\\" *ngIf=\\\"titleForm.editable\\\" (click)=\\\"titleForm.cancel($event)\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-8\\\">\\n                    <div class=\\\"mb-2\\\">\\n                        <p class=\\\"mb-0-5\\\"><strong>Description</strong></p>\\n                        <div (click)=\\\"descriptionForm.editable = true\\\">\\n                            <textarea autoResize [formControl]=\\\"descriptionForm.controls.description\\\" class=\\\"transparent mb-0-5\\\" rows=\\\"2\\\"></textarea>\\n                            <button class=\\\"button\\\" *ngIf=\\\"descriptionForm.editable\\\" (click)=\\\"descriptionForm.save($event)\\\">Save</button>\\n                            <button class=\\\"button button-clear\\\" *ngIf=\\\"descriptionForm.editable\\\" (click)=\\\"descriptionForm.cancel($event)\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"mb-2\\\">\\n                        <p class=\\\"mb-0-5\\\"><strong>Notes</strong></p>\\n                        <textarea autoResize [formControl]=\\\"newNoteForm.controls.note\\\" class=\\\"full-width mb-0-5\\\" placeholder=\\\"Write a note...\\\" rows=\\\"2\\\"></textarea>\\n                        <button class=\\\"button button-secondary\\\" (click)=\\\"newNoteForm.save($event)\\\">Add</button>\\n                    </div>\\n                    \\n                    <ng-container *ngFor=\\\"let note of task._notes\\\">\\n                        <div class=\\\"my-1\\\" *ngIf=\\\"getOrCreateEditNoteForm(note) as form\\\">\\n                            <div class=\\\"d-flex align-items-center mb-1\\\">\\n                                <div avatar [id]=\\\"note.user\\\" class=\\\"avatar mr-1\\\"></div>\\n                                <div>{{ note.updated_at | date:'MMM d, y, h:mm a' }}</div>\\n                            </div>\\n                            <div (click)=\\\"form.editable = true\\\">\\n                                <textarea autoResize [formControl]=\\\"form.controls.note\\\" class=\\\"panel\\\" rows=\\\"1\\\"></textarea>\\n                            </div>\\n                            <div class=\\\"small muted\\\">\\n                                <ng-container *ngIf=\\\"!form.editable\\\">\\n                                    <button class=\\\"button button-clear\\\" (click)=\\\"$event.stopPropagation(); form.editable = true\\\">Edit</button> |\\n                                    <button class=\\\"button button-clear\\\" *ngIf=\\\"!form.editable\\\" (click)=\\\"form.delete($event)\\\">Delete</button>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\\"form.editable\\\">\\n                                    <button class=\\\"button button-secondary\\\" (click)=\\\"form.save($event)\\\">Save</button>\\n                                    <button class=\\\"button button-clear\\\" (click)=\\\"form.cancel($event)\\\">Cancel</button>\\n                                </ng-container>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                    <div (click)=\\\"jobForm.editable = true\\\">\\n                        <p class=\\\"mb-0-5\\\"><strong>Job</strong></p>\\n                        <select [disabled]=\\\"!jobForm.editable\\\" class=\\\"full-width input-small\\\" [(ngModel)]=\\\"selectedClientId\\\" (change)=\\\"changeClient($event)\\\">\\n                            <option [value]=\\\"null\\\">Select...</option>\\n                            <option *ngFor=\\\"let option of clients$ | async\\\" [value]=\\\"option.id\\\">{{ option.name }}</option>\\n                        </select>\\n                        <select class=\\\"full-width input-small\\\" [formControl]=\\\"jobForm.controls.job\\\">\\n                            <option [ngValue]=\\\"null\\\">Select...</option>\\n                            <ng-container *ngFor=\\\"let option of jobs$ | async\\\">\\n                                <option *ngIf=\\\"option.client == selectedClientId\\\" [ngValue]=\\\"option.id\\\">{{ option.title }}</option>\\n                            </ng-container>\\n                        </select>\\n                        <ng-container *ngIf=\\\"jobForm.editable\\\">\\n                            <button class=\\\"button button-secondary\\\" (click)=\\\"jobForm.save($event)\\\">Save</button>\\n                            <button class=\\\"button button-clear\\\" (click)=\\\"jobForm.cancel($event)\\\">Cancel</button>\\n                        </ng-container>\\n                    </div>\\n                    <hr>\\n                    \\n                    <p class=\\\"mb-0-5\\\"><strong>Assignees</strong></p>\\n                    <div *ngFor=\\\"let assignee of task._assignees\\\" class=\\\"d-inline-block text-center mr-0-5\\\">\\n                        <div avatar [id]=\\\"assignee.user\\\" class=\\\"avatar pointer d-block\\\" (click)=\\\"editAssignee(assignee)\\\"></div>\\n                        <small>{{ assignee.allocated_hours }}</small>\\n                    </div>\\n                    <div class=\\\"d-inline-block text-center mr-0-5\\\">\\n                        <div class=\\\"avatar new pointer d-block\\\" (click)=\\\"editAssignee({task: task.id})\\\">\\n                            <div class=\\\"avatar-text\\\"><i class=\\\"icon-plus\\\"></i></div>\\n                        </div>\\n                        <small>&nbsp;</small>\\n                    </div>\\n                    <div *ngIf=\\\"assigneeEditForm && assigneeEditForm.editable\\\" class=\\\"mt-1\\\">\\n                        <div class=\\\"input-group mb-0-5\\\">\\n                            <select [formControl]=\\\"assigneeEditForm.controls.user\\\" class=\\\"input-small mr-1 flex-fill\\\">\\n                                <option [ngValue]=\\\"null\\\">Select...</option>\\n                                <ng-container *ngFor=\\\"let option of users$ | async\\\">\\n                                    <option [ngValue]=\\\"option.id\\\">{{ option.full_name }}</option>\\n                                </ng-container>\\n                            </select>\\n                            <input type=\\\"number\\\" [formControl]=\\\"assigneeEditForm.controls.allocated_hours\\\" class=\\\"input-small\\\" style=\\\"flex: 0 1 7rem;\\\">\\n                        </div>\\n                        <div class=\\\"d-flex\\\">\\n                            <button class=\\\"button button-secondary\\\" (click)=\\\"assigneeEditForm.save($event)\\\">Save</button>\\n                            <button class=\\\"button button-clear\\\" (click)=\\\"assigneeEditForm.cancel($event)\\\">Cancel</button>\\n                            <button class=\\\"button button-clear ml-auto\\\" *ngIf=\\\"assigneeEditForm.value.id\\\" (click)=\\\"assigneeEditForm.delete($event)\\\">Delete</button>\\n                        </div>\\n                    </div>\\n                    <hr>\\n\\n                    <p class=\\\"mb-0-5\\\"><strong>Time Spent (hrs)</strong></p>\\n                    <p>{{ task.time_spent_hours }} of {{ task._allocated_hours }}</p>\\n                    <hr>\\n                    <p class=\\\"mb-0-5\\\"><strong>Target Date</strong></p>\\n                    <div (click)=\\\"targetDateForm.editable = true\\\">\\n                        <input [formControl]=\\\"targetDateForm.controls.target_date\\\" type=\\\"date\\\" class=\\\"input-small\\\">\\n                        <button class=\\\"button\\\" *ngIf=\\\"targetDateForm.editable\\\" (click)=\\\"targetDateForm.save($event)\\\">Save</button>\\n                        <button class=\\\"button button-clear\\\" *ngIf=\\\"targetDateForm.editable\\\" (click)=\\\"targetDateForm.cancel($event)\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { getClientState, getJobState, getUserState } from './../state/state';\n\nimport { AppState } from '../state/state';\nimport { FormCleanAfterMethod } from '../forms/base.form';\nimport { IClient } from '../state/reducers/client';\nimport { IJob } from '../state/reducers/job';\nimport { ITask } from '../state/reducers/task';\nimport { ITaskAssignee } from '../state/reducers/taskassignee';\nimport { ITaskNote } from '../state/reducers/tasknote';\nimport { IUser } from '../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { TaskAssigneeForm } from '../forms/task-assignee.form';\nimport { TaskDescriptionForm } from '../forms/task-description.form';\nimport { TaskJobForm } from '../forms/task-job.form';\nimport { TaskNoteForm } from '../forms/task-note.form';\nimport { TaskTargetDateForm } from '../forms/task-target-date.form';\nimport { TaskTitleForm } from '../forms/task-title.form';\nimport { getTaskCollectionById } from './../state/selectors/task';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'task-form, [task-form]',\n    templateUrl: './task-form.component.html'\n})\nexport class TaskFormComponent implements OnChanges {\n    @Input() id: number;\n\n    @Output() close = new EventEmitter();\n\n    @ViewChild('modalPanel') modalPanelRef: ElementRef;\n\n    users$: Observable<IUser[]>;\n    clients$: Observable<IClient[]>;\n    jobs$: Observable<IJob[]>;\n    task$: Observable<ITask>;\n    taskNoteForms = {};\n    descriptionForm: TaskDescriptionForm;\n    jobForm: TaskJobForm;\n    titleForm: TaskTitleForm;\n    targetDateForm: TaskTargetDateForm;\n    newNoteForm: TaskNoteForm;\n    assigneeEditForm: TaskAssigneeForm;\n    selectedClientId: number = null; \n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.users$ = this.store.pipe(select(getUserState));\n        this.clients$ = this.store.pipe(select(getClientState));\n        this.jobs$ = this.store.pipe(select(getJobState));\n        this.descriptionForm = new TaskDescriptionForm(this.store, this.actionsSubject);\n        this.jobForm = new TaskJobForm(this.store, this.actionsSubject);\n        this.titleForm = new TaskTitleForm(this.store, this.actionsSubject);\n        this.targetDateForm = new TaskTargetDateForm(this.store, this.actionsSubject);\n        this.newNoteForm = new TaskNoteForm(this.store, this.actionsSubject);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.task$ = this.store.pipe(select(getTaskCollectionById(this.id)));\n            this.task$.pipe(take(1)).subscribe(\n                d => {\n                    this.selectedClientId = d._job.client;\n                    this.descriptionForm.load(d);\n                    this.jobForm.load(d);\n                    this.titleForm.load(d);\n                    this.targetDateForm.load(d);\n                    this.newNoteForm.load({task: d.id});\n                }\n            );\n        }\n    }\n\n    closeEvent(event) {\n        if (this.modalPanelRef.nativeElement.contains(event.target)) {\n            // inside modal - do not close\n        } else {\n            this.close.emit(event);\n        }\n    }\n\n    getOrCreateEditNoteForm(note: ITaskNote) {\n        if (!_.has(this.taskNoteForms, note.id)) {\n            const form = new TaskNoteForm(\n                this.store,\n                this.actionsSubject,\n                {alwaysEditable: false, cleanAfterMethod: FormCleanAfterMethod.loadSaved}\n            );\n            form.load(note);\n            this.taskNoteForms[note.id] = form;\n            return this.taskNoteForms[note.id];\n        }\n        return this.taskNoteForms[note.id];\n    }\n\n    changeClient($event) {\n        this.selectedClientId = $event.target.value;\n        if ($event.target.value == 'null') {\n            this.jobForm.controls.job.setValue(null);\n        }\n    }\n\n    editAssignee(assignee: ITaskAssignee) {\n        this.assigneeEditForm = new TaskAssigneeForm(\n            this.store,\n            this.actionsSubject\n        );\n        this.assigneeEditForm.editable = true;\n        this.assigneeEditForm.load(assignee);\n    }\n}\n","module.exports = \"<div class=\\\"overlay-header d-flex align-items-top\\\">\\n    <ng-container *ngIf=\\\"form.task$ | async as task\\\">\\n        <div class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"task._job.colour\\\"></div>\\n        <div class=\\\"title h4\\\">{{ task.title }}</div>\\n    </ng-container>\\n    <a class=\\\"close ml-auto\\\" (click)=\\\"closeEvent($event)\\\"><i class=\\\"icon-cancel\\\"></i></a>\\n</div>\\n<div class=\\\"overlay-body\\\">\\n    <p class=\\\"muted\\\">To change the task click one from the main list</p>\\n    <form>\\n        <input type=\\\"hidden\\\" name=\\\"task\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label>Start Time</label>\\n                <input [formControl]=\\\"form.controls.started_at_time\\\" type=\\\"time\\\" min=\\\"0:00\\\" max=\\\"23:59\\\" />\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label>End Time</label>\\n                <input [formControl]=\\\"form.controls.ended_at_time\\\" type=\\\"time\\\" min=\\\"0:00\\\" max=\\\"23:59\\\" />\\n            </div>\\n        </div>\\n        <label>Comments</label>\\n        <textarea [formControl]=\\\"form.controls.comments\\\" name=\\\"comments\\\" rows=\\\"3\\\"></textarea>\\n        <div class=\\\"text-right\\\">\\n            <a class=\\\"button button-primary\\\" (click)=\\\"form.save($event)\\\">Update</a>\\n            <a class=\\\"delete button button-primary button-clear\\\" (click)=\\\"form.delete($event)\\\">Delete <i class=\\\"icon-trash\\\"></i></a>\\n        </div>\\n    </form>\\n</div>\"","import { ActionsSubject, Store, select } from '@ngrx/store';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { AppState } from './../state/state';\nimport { FormCleanAfterMethod } from '../forms/base.form';\nimport { ITimeEntry } from '../state/reducers/timeentry';\nimport { Observable } from 'rxjs';\nimport { TimeEntryForm } from '../forms/time-entry.form';\nimport { getTimeEntryById } from '../state/selectors/timeentry';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'time-entry-form, [time-entry-form]',\n    templateUrl: './time-entry-form.component.html'\n})\nexport class TimeEntryFormComponent implements OnChanges {\n    \n    @Input() id: number;\n    @Input() newTaskId: number;\n\n    @Output() close = new EventEmitter();\n    \n    entry$: Observable<ITimeEntry>;\n    form: TimeEntryForm;\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        // setup the form\n        this.form = new TimeEntryForm(this.store, this.actionsSubject);\n        // close the form when saved and deleted\n        this.form.formSaved.subscribe(() => this.closeEvent(null));\n        this.form.formDeleted.subscribe(() => this.closeEvent(null));\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        for (const propName in changes) {\n            if (propName === 'id') {\n                this.entry$ = this.store.pipe(select(getTimeEntryById(changes[propName].currentValue)));\n                this.entry$.pipe(take(1)).subscribe(\n                    d => {\n                        this.form.load(d);\n                    }\n                );\n            }\n            if (propName === 'newTaskId' && changes[propName].currentValue) {\n                this.form.controls.task.setValue(changes[propName].currentValue);\n            }\n        }\n    }\n\n    closeEvent(event) {\n        this.close.emit(event);\n    }\n\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport * as moment from 'moment';\n\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { getDailyTimeSignoffForUser, getDailyTimeTotalForUser } from '../state/selectors/timesheet';\n\nimport { AppState } from '../state/state';\nimport { ITimeDailySignoff } from './../state/reducers/timedailysignoff';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'time-sheet-signoff, [time-sheet-signoff]',\n    template: `\n    <span class=\"checkbox fc-dailycontrol\">\n        <label>\n            <ng-container *ngIf=\"signoff$ | async as signoff; else emptyTemplate\">\n                <input #ckb type=\"checkbox\" [checked]=\"signoff.completed\" (change)=\"changeSignoff(ckb.checked, signoff)\">\n            </ng-container>\n            <span></span><em>{{ sum$ | async }}</em>\n        </label>\n    </span>\n\n    <ng-template #emptyTemplate>\n        <input #ckb type=\"checkbox\" (change)=\"changeSignoff(ckb.checked)\">\n    </ng-template>\n    `\n})\nexport class TimesheetSignoffComponent implements OnChanges {\n\n    @Input() date: Date;\n    @Input() user: number;\n\n    checked: boolean;\n    signoff$: Observable<ITimeDailySignoff>;\n    sum$: Observable<any>;\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.user && this.date) {\n            this.signoff$ = this.store.pipe(select(getDailyTimeSignoffForUser(this.user, this.date)));\n            this.sum$ = this.store.pipe(select(getDailyTimeTotalForUser(this.user, this.date)));\n        }\n    }\n    \n    changeSignoff(checked: boolean, originalData = null) {\n        if (originalData) {\n            const payload = {\n                id: originalData.id,\n                completed: checked\n            };\n            this.store.dispatch({type: actions.TimeDailySignoffActions.PATCH, payload});\n        } else {\n            const payload = {\n                date: moment(this.date).format('YYYY-MM-DD'),\n                user: this.user,\n                completed: checked\n            };\n            this.store.dispatch({type: actions.TimeDailySignoffActions.ADD, payload});\n        }\n    }\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Timesheet</div>\\n        <div class=\\\"page-header-actions\\\">\\n            <select [(ngModel)]=\\\"selectedUserId\\\" (ngModelChange)=\\\"refetchData()\\\" class=\\\"mb-0\\\">\\n                <option *ngFor=\\\"let user of users$ | async\\\" [ngValue]=\\\"user.id\\\">{{ user.full_name }}</option>\\n            </select>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid inner-content d-flex flex-fill flex-flow-column\\\">\\n    <div class=\\\"row flex-fill\\\">\\n        <div class=\\\"col-3 d-flex flex-column flex-fill\\\">\\n            <search [(ngModel)]=\\\"searchTerms\\\" (ngModelChange)=\\\"refetchData()\\\"></search>\\n            <div class=\\\"client-list-wrapper\\\" id=\\\"external-events\\\">\\n                <ul class=\\\"client-list\\\">\\n                    <li *ngFor=\\\"let client of tasks$ | async | keyvalue\\\">\\n                        <a class=\\\"client\\\" (click)=\\\"client.value.visible = !client.value.visible\\\">{{ client.key }}</a>\\n                        <ul *ngIf=\\\"client.value.visible\\\">\\n                            <li *ngFor=\\\"let job of client.value.jobs | keyvalue\\\">\\n                                <a class=\\\"job\\\" (click)=\\\"job.value.visible = !job.value.visible\\\">{{ job.key }}</a>\\n                                <ul *ngIf=\\\"job.value.visible\\\">\\n                                    <li class=\\\"task\\\" [style.background-color]=\\\"task._job.colour\\\" (click)=\\\"changeTask(task.id)\\\" *ngFor=\\\"let task of job.value.tasks\\\">\\n                                        <span class=\\\"external-event d-block\\\" [attr.data-task]=\\\"task.id\\\">{{ task.title }}</span>\\n                                    </li>\\n                                </ul>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9 relative\\\">\\n            <div calendar\\n                class=\\\"timesheet\\\"\\n                [options]=\\\"options\\\"\\n                [events]=\\\"events$ | async\\\"\\n                (onViewSkeletonRender)=\\\"onViewSkeletonRender($event)\\\"\\n                (onDatesRender)=\\\"onDatesRender($event)\\\"\\n                (onDrop)=\\\"onDrop($event)\\\"\\n                (onEventDrop)=\\\"onEventDrop($event)\\\"\\n                (onEventResize)=\\\"onEventResize($event)\\\"\\n                (onEventClick)=\\\"onEventClick($event)\\\"\\n                externalEventsWrapperId=\\\"external-events\\\"\\n                externalEventItemClass=\\\".external-event\\\">\\n            </div>\\n            <div time-entry-form\\n                [id]=\\\"selectedEventId\\\"\\n                [newTaskId]=\\\"selectedTaskId\\\"\\n                class=\\\"timesheet-event-overlay\\\"\\n                [class.in]=\\\"selectedEventId\\\"\\n                (close)=\\\"selectedEventId = null; selectedTaskId = null\\\"\\n                *ngIf=\\\"selectedEventId\\\">\\n            </div>\\n        </div>\\n    </div>    \\n    <div class=\\\"row\\\" style=\\\"flex: 0 1 50px;\\\">    \\n        <div class=\\\"col-9 offset-3\\\">\\n            <table class=\\\"mb-0\\\">\\n                <tr>\\n                    <td class=\\\"py-1\\\" [style.width.px]=\\\"viewAxisWidth\\\" [style.max-width.px]=\\\"viewAxisWidth\\\"></td>\\n                    <td class=\\\"text-center px-0 py-1\\\" *ngFor=\\\"let date of viewDates\\\">\\n                        <time-sheet-signoff [user]=\\\"selectedUserId\\\" [date]=\\\"date\\\"></time-sheet-signoff>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","import * as actions from '../state/actions';\nimport * as moment from 'moment';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { CalendarOptions, DatesRenderInfo, DropInfo, EventClickInfo, EventDropInfo, EventObject, EventResizeInfo, ViewSkeletonRenderInfo } from './calendar.component';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { getEventsForUser, getTasksForUser } from '../state/selectors/timesheet';\nimport { getMeState, getUserState } from './../state/state';\n\nimport { AppState } from '../state/state';\nimport { IUser } from '../state/reducers/user';\nimport { getDatesBetween } from './../utils/generic';\n\n@Component({\n    selector: 'time-sheet, [time-sheet]',\n    templateUrl: './time-sheet.component.html',\n    host: {'class': 'd-flex flex-fill flex-column'}\n})\nexport class TimesheetComponent implements OnInit {\n\n    events$: Observable<EventObject[]>;\n    currentUpdateRequest: Subscription;\n    options: CalendarOptions;\n    searchTerms: string[] = [];\n    selectedEventId: number;\n    selectedTaskId: number;\n    selectedUserId: number;\n    subscriptions: Subscription[] = [];\n    tasks$: Observable<any>;\n    users$: Observable<IUser[]>;\n    viewAxisWidth: number;\n    viewDates: any[] = [];\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) { }\n    \n    ngOnInit() {\n        this.store.pipe(select(getMeState)).subscribe(me => {\n            this.selectedUserId = me.id;\n            this.refetchData();\n        });\n\n        this.options = {\n            defaultView: 'agendaWeek',\n            header: {\n                left: 'agendaDay,agendaWeek',\n                center: 'title',\n                right:  'today prev,next'\n            },\n            height: 'parent',\n            firstDay: 1,\n            allDaySlot: false,\n            nowIndicator: true,\n            slotEventOverlap: false,\n            slotDuration: '00:05:00',\n            snapDuration: '00:01:00',\n            defaultTimedEventDuration: '00:05:00',\n            scrollTime: moment().format('HH:00:00'),\n            editable: true,\n            dragRevertDuration: 0,\n            droppable: true,\n            eventOverlap: false\n        };\n    }\n\n    refetchData() {\n        this.users$ = this.store.pipe(select(getUserState));\n        this.tasks$ = this.store.pipe(select(getTasksForUser(this.selectedUserId, this.searchTerms)))\n        this.events$ = this.store.pipe(select(getEventsForUser(this.selectedUserId)));\n    }\n\n    changeTask(task: number) {\n        if (this.selectedEventId) {\n            this.selectedTaskId = task;\n        }\n    }\n\n    onViewSkeletonRender(info: ViewSkeletonRenderInfo) {\n        setTimeout(() => {\n            this.viewAxisWidth = info.view.axisWidth;\n        });\n    }\n\n    onDatesRender(info: DatesRenderInfo) {\n        setTimeout(() => {\n            this.viewDates = getDatesBetween(info.view.activeStart, moment(info.view.activeEnd).add(-1, \"days\").toDate())\n        });\n    }\n\n    onDrop(info: DropInfo) {\n        const payload: any = {\n            user: this.selectedUserId,\n            task: info.draggedEl.dataset.task,\n            started_at: moment(info.date).toISOString(),\n            ended_at: moment(info.date).add(5, 'minutes').toISOString()\n        }\n        this.store.dispatch({type: actions.TimeEntryActions.ADD, payload});\n    }\n\n    onEventDrop(info: EventDropInfo) {\n        const payload: any = {\n            id: info.event.extendedProps.id,\n            started_at: moment(info.event.start).toISOString(),\n            ended_at: moment(info.event.end).toISOString()\n        }\n        this.updateEvent(info, payload);\n    }\n\n    onEventResize(info: EventResizeInfo) {\n        const payload: any = {\n            id: info.event.extendedProps.id,\n            started_at: moment(info.event.start).toISOString(),\n            ended_at: moment(info.event.end).toISOString()\n        }\n        this.updateEvent(info, payload);\n    }\n\n    onEventClick(info: EventClickInfo) {\n        this.selectedEventId = info.event.extendedProps.id;\n    }\n\n    private updateEvent(info: any, payload: any) {\n        // if there is a current subscription stop it\n        if (this.currentUpdateRequest) { this.currentUpdateRequest.unsubscribe(); }\n        // update the entry\n        this.store.dispatch({type: actions.TimeEntryActions.PATCH, payload});\n        // if there is an http error revert it\n        this.currentUpdateRequest = this.actionsSubject.pipe(\n            filter((a: any) => a.type === actions.HttpActions.HTTP_ERROR && a.payload.data.id === payload.id),\n            take(1)\n        ).subscribe(\n            () => info.revert()\n        );\n    }\n}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: 'textarea[autoResize]'\n})\nexport class AutoResizeDirective implements AfterViewInit {\n\n    constructor(private element: ElementRef) { }\n\n    @Input('autoResize') maxHeight: number;\n\n    @HostListener('input', ['$event.target'])\n    onInput(textArea: HTMLTextAreaElement): void {\n        this.adjust();\n    }\n\n    ngAfterViewInit() {\n        this.adjust();\n    }\n\n    adjust(): void {\n        const ta = this.element.nativeElement;\n        let newHeight;\n        if (ta) {\n            ta.style.overflow = 'hidden';\n            ta.style.height = 'auto';\n            if (this.maxHeight) {\n                newHeight = Math.min(ta.scrollHeight, this.maxHeight);\n            } else {\n                newHeight = ta.scrollHeight;\n            }\n            ta.style.height = newHeight + 'px';\n        }\n    }\n\n}\n","import * as _ from 'lodash';\n\nimport { AbstractControl, AsyncValidatorFn, FormGroup, ValidatorFn } from '@angular/forms';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from './../state/state';\nimport { IActionWithPayload } from './../state/models';\nimport { OnDestroy } from '@angular/core';\n\nexport enum FormCleanAfterMethod {\n    empty = 0,\n    resetToInitial = 1,\n    loadSaved = 2\n}\n\nexport interface IFormOptions {\n    alwaysEditable?: boolean;\n    cleanAfterMethod?: FormCleanAfterMethod;\n}\n\nexport interface IFormActionResult {\n    event: Event,\n    payload: any\n};\n\nconst defaultFormOptions: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n};\n\nexport class BaseForm extends FormGroup implements OnDestroy {\n\n    options: IFormOptions;\n    initialData: any;\n    controls: {};\n    createAction: string\n    createSuccessAction: string\n    updateAction: string\n    updateSuccessAction: string\n    deleteAction: string\n    deleteSuccessAction: string\n\n    private _editable = false;\n    private _formDeletedSubject = new Subject<IFormActionResult>();\n    private _formSavedSubject = new Subject<IFormActionResult>();\n\n    protected _subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        controls: { [key: string]: AbstractControl; },\n        validator?: ValidatorFn,\n        asyncValidator?: AsyncValidatorFn,\n        formOptions?: IFormOptions,\n    ) {\n        super(controls, validator, asyncValidator);\n        // set the options\n        this.options = _.assign({}, defaultFormOptions, formOptions);\n        // setup the form\n        this.editable = this.options.alwaysEditable;\n    }\n    \n    ngOnDestroy() {\n        _.each(this._subscriptions, s => s.unsubscribe());\n    }\n\n    get formSaved(): Observable<any> {\n        return this._formSavedSubject.asObservable();\n    }\n\n    get formDeleted(): Observable<any> {\n        return this._formDeletedSubject.asObservable();\n    }\n    \n    get editable(): boolean {\n        return this._editable;\n    }\n\n    set editable(value: boolean) {\n        this._editable = value;\n        this.setControlState();\n    }\n\n    load(data: any) {\n        // set the initial data incase we need to reset it\n        this.initialData = data;\n        // patch the form as no all fields will be defined\n        this.patchValue(data);\n    }\n\n    save(event: Event) {\n        // save the form data\n        event.stopPropagation();\n        \n        if (!this.valid) {\n            return;\n        }\n        \n        if (this.createAction && !this.value.id) {\n            // create a new record as we have no id\n            this.store.dispatch({ type: this.createAction, payload: this.value });\n        } else if (this.updateAction && this.value.id) {\n            // update or patch the record\n            this.store.dispatch({ type: this.updateAction, payload: this.value });\n        } else {\n            return;\n        }\n        \n        // wait for the result\n        this.waitForResult(event);\n    }\n\n    cancel(event: Event) {\n        event.stopPropagation();\n\n        this.reset(this.initialData);\n        \n        if (!this.options.alwaysEditable) {\n            this.editable = false;\n        }\n    }\n\n    delete(event: Event) {\n        // delete the instance in the form\n        event.stopPropagation();\n        \n        if (!this.deleteAction || !this.value.id) {\n            return;\n        }\n\n        // delete the record\n        this.store.dispatch({ type: this.deleteAction, payload: this.value });\n        \n        // wait for the result\n        this.waitForResult(event);\n    }\n\n    resetAndClose(payload) {\n        if (this.options.cleanAfterMethod == FormCleanAfterMethod.empty) {\n            this.initialData = {};\n        } else if (this.options.cleanAfterMethod == FormCleanAfterMethod.loadSaved) {\n            this.initialData = payload;\n        } else if (this.options.cleanAfterMethod == FormCleanAfterMethod.resetToInitial) {\n            // do nothing\n        }\n        \n        this.reset(this.initialData);\n        \n        if (!this.options.alwaysEditable) {\n            this.editable = false;\n        }\n    }\n\n    setControlState() {\n        // enable or disable all controls\n        if (this.editable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n    }\n\n    waitForResult(event) {\n        // all store actions pass through the actionsSubject\n        // watch for our save or delete success actions and reset/close the form\n        return this.actionsSubject.pipe(\n            filter(\n                (action: IActionWithPayload) =>\n                _.includes([this.createSuccessAction, this.updateSuccessAction, this.deleteSuccessAction], action.type)\n            ),\n            filter(\n                action => this.value.id === null || this.value.id === action.payload.id\n            ),\n            take(1)\n        ).subscribe(\n            action => {\n                if (this.deleteSuccessAction === action.type) {\n                    // after delete totally reset the form\n                    // this may need to be taylored later in options but ok for now\n                    this.initialData = {};\n                    this.reset(this.initialData);\n                    this.editable = false;\n                    // and push the data to the observable\n                    this._formDeletedSubject.next({event: event, payload: action.payload});\n                } else {\n                    // reset the form\n                    this.resetAndClose(action.payload);\n                    // and push the data to the observable\n                    this._formSavedSubject.next({event: event, payload: action.payload});\n                }\n            }\n        );\n    }\n\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskAssigneeForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        user: FormControl\n        allocated_hours: FormControl\n    };\n    createAction = actions.TaskAssigneeActions.ADD;\n    createSuccessAction = actions.TaskAssigneeActions.ADD_SUCCESS;\n    updateAction = actions.TaskAssigneeActions.UPDATE;\n    updateSuccessAction = actions.TaskAssigneeActions.UPDATE_SUCCESS;\n    deleteAction = actions.TaskAssigneeActions.REMOVE;\n    deleteSuccessAction = actions.TaskAssigneeActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                task: new FormControl(null, Validators.required),\n                user: new FormControl(null, Validators.required),\n                allocated_hours: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.resetToInitial\n}\n\nexport class TaskCreateForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        title: FormControl\n        description: FormControl\n        job: FormControl\n        target_date: FormControl\n        status: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                title: new FormControl('', Validators.required),\n                description: new FormControl(''),\n                job: new FormControl(null, Validators.required),\n                target_date: new FormControl(null),\n                status: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskDescriptionForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        description: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                description: new FormControl('')\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskJobForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        job: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                job: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.resetToInitial\n}\n\nexport class TaskNoteForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        note: FormControl\n    };\n    createAction = actions.TaskNoteActions.ADD;\n    createSuccessAction = actions.TaskNoteActions.ADD_SUCCESS;\n    updateAction = actions.TaskNoteActions.UPDATE;\n    updateSuccessAction = actions.TaskNoteActions.UPDATE_SUCCESS;\n    deleteAction = actions.TaskNoteActions.REMOVE;\n    deleteSuccessAction = actions.TaskNoteActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                task: new FormControl(null, Validators.required),\n                note: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskTargetDateForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        target_date: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                target_date: new FormControl(null)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n\n        // when the date field is emptied set it to null as an empty\n        // string is an invalid date format in drf.\n        const sub = this.controls.target_date.valueChanges.subscribe(value => {\n            if (value === '') {\n                this.controls.target_date.setValue(null);\n            }\n        });\n        this._subscriptions.push(sub);\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskTitleForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        title: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                title: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport * as moment from 'moment';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { IActionWithPayload } from './../state/models';\nimport { ITask } from './../state/reducers/task';\nimport { Observable } from '../../../node_modules/rxjs';\nimport { getTaskCollectionById } from '../state/selectors/task';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TimeEntryForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        started_at: FormControl\n        started_at_time: FormControl\n        ended_at: FormControl\n        ended_at_time: FormControl\n        comments: FormControl\n    };\n    updateAction = actions.TimeEntryActions.PATCH;\n    updateSuccessAction = actions.TimeEntryActions.PATCH_SUCCESS;\n    deleteAction = actions.TimeEntryActions.REMOVE;\n    deleteSuccessAction = actions.TimeEntryActions.REMOVE_SUCCESS;\n\n    task$: Observable<ITask>;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null, Validators.required),\n                task: new FormControl(null, Validators.required),\n                started_at: new FormControl(null, Validators.required),\n                started_at_time: new FormControl(null, Validators.required),\n                ended_at: new FormControl(null, Validators.required),\n                ended_at_time: new FormControl(null, Validators.required),\n                comments: new FormControl(null)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n        \n        // subscribe to the time changes and update the full date time fields\n        this.controls.started_at_time.valueChanges.subscribe(\n            value => {\n                if (!value) { return };\n                const timeSplit = value.split(':');\n                const date = moment(this.controls.started_at.value).set({h: timeSplit[0], m: timeSplit[1]});\n                this.controls.started_at.setValue(date.toISOString());\n            }\n        )\n        this.controls.ended_at_time.valueChanges.subscribe(\n            value => {\n                if (!value) { return };\n                const timeSplit = value.split(':');\n                const date = moment(this.controls.ended_at.value).set({h: timeSplit[0], m: timeSplit[1]});\n                this.controls.ended_at.setValue(date.toISOString());\n            }\n        )\n        // reload the selected task data\n        this.controls.task.valueChanges.subscribe(\n            value => {\n                this.task$ = this.store.pipe(select(getTaskCollectionById(value)));\n            }\n        )\n    }\n\n    load(data: any) {\n        // set the initial data incase we need to reset it\n        this.initialData = data;\n        // patch the form as no all fields will be defined\n        this.patchValue(data);\n        // set the time fields values\n        this.controls.started_at_time.setValue(moment(data.started_at).format('HH:mm'));\n        this.controls.ended_at_time.setValue(moment(data.ended_at).format('HH:mm'));\n        // load the selected task data\n        this.task$ = this.store.pipe(select(getTaskCollectionById(data.task)));\n    }\n\n}\n","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { IClient } from '../state/reducers/client';\nimport { valueOr } from '../utils/generic';\n\n@Pipe({\n    name: 'clientSearch',\n    pure: true\n})\nexport class ClientSearchPipe implements PipeTransform {\n    public transform(array: IClient[], terms: string[]): any {\n        if (!terms || terms.length == 0) {\n            return array;\n        }\n        return array.filter((ob) => this.filterObject(ob, terms));\n    }\n\n    private filterObject = (value: IClient, terms: string[]) => {\n        let found: boolean = true;\n        _.each(terms, (term) => {\n            if (!_.includes(valueOr(value.name).toLowerCase(), term) &&\n                !_.includes(valueOr(value.phone_number).toLowerCase(), term) &&\n                !_.includes(valueOr(value.email_address).toLowerCase(), term) &&\n                !_.includes(valueOr(value.website).toLowerCase(), term) &&\n                !_.includes(valueOr(value.address).toLowerCase(), term)\n            ) {\n                found = false;\n            }\n        });\n        return found;\n    }\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIService {\n\n    constructor(private http: HttpClient) { }\n\n    private get headers() {\n        return new HttpHeaders({'Content-Type': 'application/json'});\n    }\n\n    all(url: string): Observable<any> {\n        return this.http.get(`${url}`, { headers: this.headers });\n    }\n\n    one(url: string, id: number): Observable<any> {\n        return this.http.get(`${url}${id}/`, { headers: this.headers });\n    }\n\n    create(url: string, object: any): Observable<any> {\n        return this.http.post(`${url}`, object, { headers: this.headers });\n\n    }\n\n    update(url: string, object: any): Observable<any> {\n        return this.http.put(`${url}${object.id}/`, object, { headers: this.headers });\n    }\n\n    patch(url: string, object: any): Observable<any> {\n        return this.http.patch(`${url}${object.id}/`, object, { headers: this.headers });\n    }\n\n    remove(url: string, object: any): Observable<any> {\n        // Here we are returning the object back as a delete response has no content\n        return this.http.delete(`${url}${object.id}/`, { headers: this.headers })\n        .pipe(map(() => object));\n    }\n\n    options(url: string): Observable<any> {\n        return this.http.options(`${url}`, { headers: this.headers });\n    }\n\n    post(url: string, object: any): Observable<any> {\n        return this.http.post(`${url}`, object, { headers: this.headers });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Globals {\n  appJSRoot: string = window['appJSRoot'];\n  logoutUrl: string = window['logoutUrl']\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IClient } from '../reducers/client';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientActions {\n\n    static LOAD_ALL = '[Client] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Client] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Client] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Client] LOAD_ONE_SUCCESS';\n    static ADD = '[Client] ADD';\n    static ADD_SUCCESS = '[Client] ADD_SUCCESS';\n    static UPDATE = '[Client] UPDATE';\n    static UPDATE_SUCCESS = '[Client] UPDATE_SUCCESS';\n    static REMOVE = '[Client] REMOVE';\n    static REMOVE_SUCCESS = '[Client] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: ClientActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IClient[]): IActionWithPayload {\n        return { type: ClientActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: ClientActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataActions {\n\n    static LOAD_DATA = '[Data] LOAD_DATA';\n\n    LoadData(payload: boolean): IActionWithPayload {\n        return { type: DataActions.LOAD_DATA, payload };\n    }\n\n}\n","import { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterActions {\n\n    static CLIENT = '[Filter] CLIENT';\n    static JOB = '[Filter] JOB';\n    static OVERDUE = '[Filter] OVERDUE';\n    static USER = '[Filter] USER';\n\n    Client(payload: number): IActionWithPayload {\n        return { type: FilterActions.CLIENT, payload };\n    }\n\n    Job(payload: number): IActionWithPayload {\n        return { type: FilterActions.JOB, payload };\n    }\n\n    Overdue(payload: number): IActionWithPayload {\n        return { type: FilterActions.OVERDUE, payload };\n    }\n\n    User(payload: number): IActionWithPayload {\n        return { type: FilterActions.USER, payload };\n    }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpActions {\n\n    static HTTP_ERROR = '[Http] HTTP_ERROR';\n\n    HttpError(payload: HttpErrorResponse): IActionWithPayload {\n        return { type: HttpActions.HTTP_ERROR, payload };\n    }\n\n}\n","import { ClientActions } from './client';\nimport { DataActions } from './data';\nimport { FilterActions } from './filters';\nimport { HttpActions } from './http';\nimport { JobActions } from './job';\nimport { MeActions } from './me';\nimport { TaskActions } from './task';\nimport { TaskAssigneeActions } from './taskassignee';\nimport { TaskNoteActions } from './tasknote';\nimport { TaskStatusActions } from './taskstatus';\nimport { TimeDailySignoffActions } from './timedailysignoff';\nimport { TimeEntryActions } from './timeentry';\nimport { UserActions } from './user';\n\nexport {\n    ClientActions,\n    DataActions,\n    FilterActions,\n    HttpActions,\n    JobActions,\n    MeActions,\n    TaskActions,\n    TaskAssigneeActions,\n    TaskNoteActions,\n    TaskStatusActions,\n    TimeDailySignoffActions,\n    TimeEntryActions,\n    UserActions\n};\n\nexport const actions = [\n    ClientActions,\n    DataActions,\n    FilterActions,\n    HttpActions,\n    JobActions,\n    MeActions,\n    TaskActions,\n    TaskAssigneeActions,\n    TaskNoteActions,\n    TaskStatusActions,\n    TimeDailySignoffActions,\n    TimeEntryActions,\n    UserActions\n];\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJob } from '../reducers/job';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobActions {\n\n    static LOAD_ALL = '[Job] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Job] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Job] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Job] LOAD_ONE_SUCCESS';\n    static ADD = '[Job] ADD';\n    static ADD_SUCCESS = '[Job] ADD_SUCCESS';\n    static UPDATE = '[Job] UPDATE';\n    static UPDATE_SUCCESS = '[Job] UPDATE_SUCCESS';\n    static REMOVE = '[Job] REMOVE';\n    static REMOVE_SUCCESS = '[Job] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJob[]): IActionWithPayload {\n        return { type: JobActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJob): IActionWithPayload {\n        return { type: JobActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJob): IActionWithPayload {\n        return { type: JobActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJob): IActionWithPayload {\n        return { type: JobActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IMe } from '../reducers/me';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MeActions {\n\n    static LOAD = '[Me] LOAD';\n    static LOAD_SUCCESS = '[Me] LOAD_SUCCESS';\n\n    Load(): Action {\n        return { type: MeActions.LOAD };\n    }\n\n    LoadSuccess(payload: IMe): IActionWithPayload {\n        return { type: MeActions.LOAD_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITask } from '../reducers/task';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskActions {\n\n    static LOAD_ALL = '[Task] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Task] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Task] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Task] LOAD_ONE_SUCCESS';\n    static ADD = '[Task] ADD';\n    static ADD_SUCCESS = '[Task] ADD_SUCCESS';\n    static UPDATE = '[Task] UPDATE';\n    static UPDATE_SUCCESS = '[Task] UPDATE_SUCCESS';\n    static PATCH = '[Task] PATCH';\n    static PATCH_SUCCESS = '[Task] PATCH_SUCCESS';\n    static REMOVE = '[Task] REMOVE';\n    static REMOVE_SUCCESS = '[Task] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITask[]): IActionWithPayload {\n        return { type: TaskActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITaskAssignee } from '../reducers/taskassignee';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskAssigneeActions {\n\n    static LOAD_ALL = '[TaskAssignee] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskAssignee] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskAssignee] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskAssignee] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskAssignee] ADD';\n    static ADD_SUCCESS = '[TaskAssignee] ADD_SUCCESS';\n    static UPDATE = '[TaskAssignee] UPDATE';\n    static UPDATE_SUCCESS = '[TaskAssignee] UPDATE_SUCCESS';\n    static PATCH = '[TaskAssignee] PATCH';\n    static PATCH_SUCCESS = '[TaskAssignee] PATCH_SUCCESS';\n    static REMOVE = '[TaskAssignee] REMOVE';\n    static REMOVE_SUCCESS = '[TaskAssignee] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskAssigneeActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITaskAssignee[]): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITaskNote } from '../reducers/tasknote';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskNoteActions {\n\n    static LOAD_ALL = '[TaskNote] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskNote] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskNote] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskNote] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskNote] ADD';\n    static ADD_SUCCESS = '[TaskNote] ADD_SUCCESS';\n    static UPDATE = '[TaskNote] UPDATE';\n    static UPDATE_SUCCESS = '[TaskNote] UPDATE_SUCCESS';\n    static REMOVE = '[TaskNote] REMOVE';\n    static REMOVE_SUCCESS = '[TaskNote] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskNoteActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITaskNote[]): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITaskStatus } from '../reducers/taskstatus';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskStatusActions {\n\n    static LOAD_ALL = '[TaskStatus] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskStatus] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskStatus] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskStatus] LOAD_ONE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskStatusActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITaskStatus[]): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskStatus): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITimeDailySignoff } from '../reducers/timedailysignoff';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeDailySignoffActions {\n\n    static LOAD_ALL = '[TimeDailySignoff] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TimeDailySignoff] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TimeDailySignoff] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TimeDailySignoff] LOAD_ONE_SUCCESS';\n    static ADD = '[TimeDailySignoff] ADD';\n    static ADD_SUCCESS = '[TimeDailySignoff] ADD_SUCCESS';\n    static UPDATE = '[TimeDailySignoff] UPDATE';\n    static UPDATE_SUCCESS = '[TimeDailySignoff] UPDATE_SUCCESS';\n    static PATCH = '[TimeDailySignoff] PATCH';\n    static PATCH_SUCCESS = '[TimeDailySignoff] PATCH_SUCCESS';\n    static REMOVE = '[TimeDailySignoff] REMOVE';\n    static REMOVE_SUCCESS = '[TimeDailySignoff] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TimeDailySignoffActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITimeDailySignoff[]): IActionWithPayload {\n        return { type: TimeDailySignoffActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TimeDailySignoffActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITimeDailySignoff): IActionWithPayload {\n        return { type: TimeDailySignoffActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITimeEntry } from '../reducers/timeentry';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntryActions {\n\n    static LOAD_ALL = '[TimeEntry] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TimeEntry] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TimeEntry] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TimeEntry] LOAD_ONE_SUCCESS';\n    static ADD = '[TimeEntry] ADD';\n    static ADD_SUCCESS = '[TimeEntry] ADD_SUCCESS';\n    static UPDATE = '[TimeEntry] UPDATE';\n    static UPDATE_SUCCESS = '[TimeEntry] UPDATE_SUCCESS';\n    static PATCH = '[TimeEntry] PATCH';\n    static PATCH_SUCCESS = '[TimeEntry] PATCH_SUCCESS';\n    static REMOVE = '[TimeEntry] REMOVE';\n    static REMOVE_SUCCESS = '[TimeEntry] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TimeEntryActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITimeEntry[]): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IUser } from '../reducers/user';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserActions {\n\n    static LOAD_ALL = '[User] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[User] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[User] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[User] LOAD_ONE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: UserActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IUser[]): IActionWithPayload {\n        return { type: UserActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: UserActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IUser): IActionWithPayload {\n        return { type: UserActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n}\n","import { Actions, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { APIService } from '../services/api';\nimport { HttpActions } from './actions';\nimport { IActionWithPayload } from './models';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIBaseEffects {\n\n    protected url = '';\n\n    get apiUrl() {\n        return this.url;\n    }\n\n    protected _all$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        mergeMap(action =>\n            this.service$.all(this.apiUrl).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: res}))\n            )\n        )\n    )\n\n    protected _one$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(id =>\n            this.service$.one(this.apiUrl, id).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: res}))\n            )\n        )\n    )\n\n    protected _add$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.create(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _update$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.update(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _patch$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.patch(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _remove$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.remove(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    constructor(\n        protected updates$: Actions,\n        protected service$: APIService) {\n    }\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientEffects extends APIBaseEffects {\n    protected url = '/api/clients/';\n    protected prefix = '[Client]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import * as actions from '../actions';\n\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { Injectable } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEffects {\n\n    @Effect() loadData$ = this.updates$.pipe(\n        ofType(actions.DataActions.LOAD_DATA),\n        mergeMap(\n            () => {\n                return [\n                    new actions.ClientActions().LoadAll(),\n                    new actions.JobActions().LoadAll(),\n                    new actions.MeActions().Load(),\n                    new actions.TaskActions().LoadAll(),\n                    new actions.TaskAssigneeActions().LoadAll(),\n                    new actions.TaskNoteActions().LoadAll(),\n                    new actions.TaskStatusActions().LoadAll(),\n                    new actions.TimeDailySignoffActions().LoadAll(),\n                    new actions.TimeEntryActions().LoadAll(),\n                    new actions.UserActions().LoadAll()\n                ];\n            }\n        )\n    );\n\n    constructor(\n        private updates$: Actions\n    ) {}\n}\n","import { ClientEffects } from './client';\nimport { DataEffects } from './data';\nimport { JobEffects } from './job';\nimport { MeEffects } from './me';\nimport { TaskAssigneeEffects } from './taskassignee';\nimport { TaskEffects } from './task';\nimport { TaskNoteEffects } from './tasknote';\nimport { TaskStatusEffects } from './taskstatus';\nimport { TimeDailySignoffEffects } from './timedailysignoff';\nimport { TimeEntryEffects } from './timeentry';\nimport { UserEffects } from './user';\n\nexport const effects = [\n    ClientEffects,\n    DataEffects,\n    JobEffects,\n    MeEffects,\n    TaskEffects,\n    TaskAssigneeEffects,\n    TaskNoteEffects,\n    TaskStatusEffects,\n    TimeDailySignoffEffects,\n    TimeEntryEffects,\n    UserEffects\n];\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobEffects extends APIBaseEffects {\n    protected url = '/api/jobs/';\n    protected prefix = '[Job]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MeEffects extends APIBaseEffects {\n    protected url = '/api/users/me/';\n    protected prefix = '[Me]';\n\n    @Effect() load$ = this._all$(\n        `${this.prefix} LOAD`,\n        `${this.prefix} LOAD_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskEffects extends APIBaseEffects {\n    protected url = '/api/tasks/';\n    protected prefix = '[Task]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskAssigneeEffects extends APIBaseEffects {\n    protected url = '/api/task-assignees/';\n    protected prefix = '[TaskAssignee]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskNoteEffects extends APIBaseEffects {\n    protected url = '/api/task-notes/';\n    protected prefix = '[TaskNote]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskStatusEffects extends APIBaseEffects {\n    protected url = '/api/task-statuses/';\n    protected prefix = '[TaskStatus]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeDailySignoffEffects extends APIBaseEffects {\n    protected url = '/api/time-daily-signoff/';\n    protected prefix = '[TimeDailySignoff]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntryEffects extends APIBaseEffects {\n    protected url = '/api/time-entries/';\n    protected prefix = '[TimeEntry]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserEffects extends APIBaseEffects {\n    protected url = '/api/users/';\n    protected prefix = '[User]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n\n}\n","import * as _ from 'lodash';\n\nimport { IActionWithPayload } from './models';\n\nexport function reduceState (state: any, action: IActionWithPayload, type: string) {\n    switch (type) {\n        case 'REPLACE_ALL':\n            return action.payload;\n\n        case 'REPLACE_ONE':\n            const index = _.findIndex(state, { id: action.payload.id });\n            if (index >= 0) {\n                // only replace the data if its not the same to avoid a state change\n                if (_.isEqual(state[index], action.payload)) {\n                    return state;\n                } else {\n                    return [\n                        ...state.slice(0, index),\n                        action.payload,\n                        ...state.slice(index + 1)\n                    ];\n                }\n            }\n            return [...state, action.payload];\n\n        case 'ADD_ONE':\n            return [...state, action.payload];\n\n        case 'REMOVE_ONE':\n            return _.filter(state, (obj: any) => obj.id !== action.payload.id);\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IClient {\n    id?: number;\n    name: string;\n    colour: string;\n    phone_number?: string;\n    email_address?: string;\n    website?: string;\n    address?: string;\n    notes?: string;\n}\n\nexport type State = IClient[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Client]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import * as _ from 'lodash';\n\nexport interface IFilter {\n    client: number;\n    job: number;\n    overdue: boolean;\n    user: number;\n}\n\nexport type State = IFilter;\n\nexport const initialState: State = {\n    client: null,\n    job: null,\n    overdue: null,\n    user: null\n};\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Filter]';\n    \n    switch (action.type) {\n\n        case `${actionPrefix} CLIENT`: {\n            return _.assign({}, state, { client: action.payload })\n        }\n\n        case `${actionPrefix} JOB`: {\n            return _.assign({}, state, { job: action.payload })\n        }\n\n        case `${actionPrefix} OVERDUE`: {\n            return _.assign({}, state, { overdue: action.payload })\n        }\n\n        case `${actionPrefix} USER`: {\n            return _.assign({}, state, { user: action.payload })\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IClient } from './client';\nimport { reduceState } from '../generics';\n\nexport interface IJob {\n    id?: number;\n    title: string;\n    description?: string;\n    created_at?: string;\n    client: number;\n    type: number;\n    estimated_hours?: string;\n    colour: string;\n    status: number;\n    billed_to?: string;\n    allocated_hours?: string;\n    time_spent_hours?: string;\n    _client?: IClient;\n}\n\nexport type State = IJob[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Job]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IMe {\n    id: number;\n    full_name: string;\n    initials: string;\n}\n\nexport type State = IMe;\n\nexport const initialState: State = {\n    id: null,\n    full_name: '',\n    initials: ''\n};\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Me]';\n    switch (action.type) {\n\n        // primarily used when state is a single object\n        case `${actionPrefix} LOAD_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IJob } from './job';\nimport { ITaskAssignee } from './taskassignee';\nimport { ITaskNote } from './tasknote';\nimport { ITaskStatus } from './taskstatus';\nimport { reduceState } from '../generics';\n\nexport interface ITask {\n    id?: number;\n    title: string;\n    description?: string;\n    created_at?: string;\n    job: number;\n    status: number;\n    target_date?: string;\n    closed?: boolean;\n    not_chargeable?: boolean;\n    time_spent_hours?: string;\n    allocated_hours?: string;\n    is_overdue?: boolean;\n    order: number;\n    tags: string[];\n    _job?: IJob;\n    _assignees?: ITaskAssignee[];\n    _notes?: ITaskNote[];\n    _status?: ITaskStatus[];\n    _time_spent_hours?: string;\n    _allocated_hours?: string;\n    _is_over_allocated_hours?: boolean;\n}\n\nexport type State = ITask[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Task]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskAssignee {\n    id?: number;\n    task: number;\n    user: number;\n    allocated_hours: string;\n    time_spent_hours?: string;\n}\n\nexport type State = ITaskAssignee[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskAssignee]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskNote {\n    id?: number;\n    task: number;\n    note: string;\n    user?: number;\n    created_at?: string;\n    updated_at?: string;\n}\n\nexport type State = ITaskNote[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskNote]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskStatus {\n    id: number;\n    title: string;\n    order: number;\n}\n\nexport type State = ITaskStatus[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskStatus]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITimeDailySignoff {\n    id?: number;\n    user: number;\n    date: string;\n    completed: boolean;\n}\n\nexport type State = ITimeDailySignoff[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TimeDailySignoff]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITimeEntry {\n    id?: number;\n    started_at: string;\n    ended_at: string;\n    comments?: string;\n    task: number;\n    user: number;\n    duration?: string;\n}\n\nexport type State = ITimeEntry[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TimeEntry]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IUser {\n    id: number;\n    full_name: string;\n    initials: string;\n}\n\nexport type State = IUser[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[User]';\n    switch (action.type) {\n\n        // Replace all objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import * as _ from 'lodash';\n\nimport { getClientState, getJobState } from '../state';\n\nimport { createSelector } from '@ngrx/store';\n\nexport const getJobCollection = createSelector(\n    getClientState,\n    getJobState,\n    (clients, jobs) => {\n        const objects = _.map(jobs, (job) => {\n            return _.assign({}, job, {\n                _client: _.find(clients, ['id', job.client])\n            });\n        });\n        return _.orderBy(objects, ['title'], ['asc']);\n    }\n);\n","import * as _ from 'lodash';\n\nimport { getTaskAssigneeState, getTaskNoteState, getTaskState } from '../state';\n\nimport { createSelector } from '@ngrx/store';\nimport { getJobCollection } from './job';\nimport { getTaskStatusState } from '../state';\n\nexport const getTaskNotes = createSelector(\n    getTaskNoteState,\n    (notes) => _.orderBy(notes, ['updated_at'], ['desc'])\n);\n\nexport const getTaskCollection = createSelector(\n    getJobCollection,\n    getTaskState,\n    getTaskAssigneeState,\n    getTaskNotes,\n    getTaskStatusState,\n    (jobs, tasks, assignees, notes, statuses) => {\n        const objects = _.map(tasks, (task) => {\n            const foundAssignees = _.filter(assignees, ['task', task.id]);\n            const time_spent = _.sumBy(foundAssignees, a => +a.time_spent_hours).toFixed(2);\n            const allocated = _.sumBy(foundAssignees, a => +a.allocated_hours).toFixed(2);\n            return _.assign({}, task, {\n                _job: _.find(jobs, ['id', task.job]),\n                _assignees: foundAssignees,\n                _notes: _.filter(notes, ['task', task.id]),\n                _status: _.find(statuses, ['id', task.status]),\n                _time_spent_hours: time_spent,\n                _allocated_hours: allocated,\n                _is_over_allocated_hours: +time_spent > +allocated\n            });\n        });\n        return _.orderBy(objects, ['order'], ['asc']);\n    }\n);\n\nexport const getTaskCollectionById = (id) => createSelector(\n    getTaskCollection,\n    (tasks) => _.find(tasks, ['id', id])\n);\n\nexport const getTaskAssigneeCollection = createSelector(\n    getTaskAssigneeState,\n    getTaskCollection,\n    (assignees, tasks) => {\n        const objects = _.map(assignees, assignee => {\n            return _.assign({}, assignee, {\n                _task: _.find(tasks, ['id', assignee.task])\n            });\n        })\n        return _.orderBy(objects, ['order'], ['asc']);\n    }\n);\n","import * as _ from 'lodash'\n\nimport { getFilterState, getTaskStatusState } from './../state';\nimport { getTaskAssigneeCollection, getTaskCollection } from './task';\n\nimport { createSelector } from '@ngrx/store';\n\nexport const getTaskAssigneesForTaskboard = createSelector(\n    getFilterState,\n    getTaskStatusState,\n    getTaskAssigneeCollection,\n    (filters, statuses, assignees) => _.map(statuses, status => {\n        let foundAssignees = _.filter(assignees, ['_task.status', status.id]);\n        if (filters.user) {\n            foundAssignees = _.filter(foundAssignees, ['user', filters.user])\n        }\n        if (filters.client) {\n            foundAssignees = _.filter(foundAssignees, ['_task._job.client', filters.client])\n        }\n        if (filters.job) {\n            foundAssignees = _.filter(foundAssignees, ['_task.job', filters.job])\n        }\n        if (filters.overdue === true) {\n            foundAssignees = _.filter(foundAssignees, ['_task.is_overdue', filters.overdue])\n        }\n        return _.assign({}, status, {\n            _assignees: foundAssignees\n        });\n    })\n);\n\nexport const getStatsForTaskboard = createSelector(\n    getFilterState,\n    getTaskCollection,\n    (filters, tasks) => {\n        let foundTasks = tasks;\n        if (filters.user) {\n            foundTasks = _.filter(foundTasks, { _assignees: [{'user': filters.user}] })\n        }\n        if (filters.client) {\n            foundTasks = _.filter(foundTasks, ['_job.client', filters.client])\n        }\n        if (filters.job) {\n            foundTasks = _.filter(foundTasks, ['job', filters.job])\n        }\n        if (filters.overdue === true) {\n            foundTasks = _.filter(foundTasks, ['is_overdue', filters.overdue])\n        }\n        return {\n            count_of_tasks: foundTasks.length,\n            allocated_hours: _.sumBy(foundTasks, t => +t._allocated_hours).toFixed(2),\n            count_of_overdue: _.filter(foundTasks, t => t.is_overdue).length\n        }\n    }\n);\n","import * as _ from 'lodash';\n\nimport { createSelector } from '@ngrx/store';\nimport { getTimeEntryState } from '../state';\n\nexport const getTimeEntryById = (id) => createSelector(\n    getTimeEntryState,\n    (entries) => _.find(entries, ['id', id])\n);\n","import * as _ from 'lodash';\nimport * as moment from 'moment';\n\nimport { getTimeDailySignoffState, getTimeEntryState } from './../state';\n\nimport { createSelector } from '@ngrx/store';\nimport { getTaskCollection } from './task';\nimport { valueOr } from '../../utils/generic';\n\nexport const getEventsForUser = (id: number) => createSelector(\n    getTimeEntryState,\n    getTaskCollection,\n    (entries, tasks) => {\n        const objs = _.filter(entries, ['user', id]);\n        return _.map(objs, (obj) => {\n            const _task = _.find(tasks, ['id', obj.task]);\n            return {\n                id: obj.id.toString(),\n                start: new Date(obj.started_at),\n                end: new Date(obj.ended_at),\n                title: _.get(_task, '_job.title', '') + ' - ' + _.get(_task, 'title', ''),\n                backgroundColor: _.get(_task, '_job.colour', ''),\n                borderColor: _.get(_task, '_job.colour', ''),\n                textColor: '#000',\n                allDay: false,\n                extendedProps: {\n                    id: obj.id,\n                    task: obj.task \n                }\n            };\n        });\n    }\n);\n\nexport const getTasksForUser = (id: number = null, searchTerms: string[] = []) => createSelector(\n    getTaskCollection,\n    (tasks) => {\n        let objs = tasks;\n        \n        // apply filters (either search all or only show tasks im assigned to)\n        if (searchTerms.length > 0) {\n            objs = _.filter(objs, obj => {\n                let found = true;\n                _.each(searchTerms, (term) => {\n                    if (!_.includes(valueOr(obj.title).toLowerCase(), term) &&\n                        !_.includes(valueOr(obj._job.title).toLowerCase(), term) &&\n                        !_.includes(valueOr(obj._job._client.name).toLowerCase(), term)\n                    ) {\n                        found = false;\n                    }\n                });\n                return found;\n            });\n        } else if (id) {\n            objs = _.filter(objs, { _assignees: [{'user': id}] });\n        }\n\n        // group the tasks by client\n        const autoShow = searchTerms.length > 0;\n        const byClient = _.groupBy(objs, '_job._client.name');\n        const byClientByJob = {};\n\n        // then for each client group the tasks by job\n        _.forEach(byClient, (tasks, key) => {\n            const byJob = _.groupBy(tasks, '_job.title');\n            byClientByJob[key] = {\n                visible: autoShow,\n                jobs: _.transform(\n                    byJob, (result, value, key) => result[key] = {\n                        visible: autoShow,\n                        tasks: value\n                    }\n                )\n            }\n        })\n        \n        return byClientByJob;\n    }\n)\n\nexport const getDailyTimeSignoffForUser = (id: number, date: Date) => createSelector(\n    getTimeDailySignoffState,\n    (signoffs) => _.find(signoffs, e => e.user == id && moment(e.date).date() == moment(date).date())\n)\n\nexport const getDailyTimeTotalForUser = (id: number, date: Date) => createSelector(\n    getTimeEntryState,\n    (entries) => {\n        const forDay = _.filter(entries, e => e.user == id && moment(e.started_at).date() == moment(date).date());\n        const durations: string[] = _.map(forDay, 'duration');\n        const totalDurations = durations.slice(1).reduce((prev, cur) => moment.duration(cur).add(prev), moment.duration(durations[0]));\n        return moment.utc(totalDurations.asMilliseconds()).format(\"HH:mm\");\n    }\n)","import * as _ from 'lodash';\n\nimport { createSelector } from '@ngrx/store';\nimport { getUserState } from '../state';\n\nexport const getUserById = (id) => createSelector(\n  getUserState,\n  (users) => _.find(users, ['id', id])\n);\n","import * as fromClient from './reducers/client';\nimport * as fromFilter from './reducers/filter';\nimport * as fromJob from './reducers/job';\nimport * as fromMe from './reducers/me';\nimport * as fromTask from './reducers/task';\nimport * as fromTaskAssignee from './reducers/taskassignee';\nimport * as fromTaskNote from './reducers/tasknote';\nimport * as fromTaskStatus from './reducers/taskstatus';\nimport * as fromTimeDailySignoff from './reducers/timedailysignoff';\nimport * as fromTimeEntry from './reducers/timeentry';\nimport * as fromUser from './reducers/user';\n\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nexport interface AppState {\n    clients: fromClient.State;\n    filters: fromFilter.State;\n    jobs: fromJob.State;\n    me: fromMe.State;\n    tasks: fromTask.State;\n    task_assignees: fromTaskAssignee.State;\n    task_notes: fromTaskNote.State;\n    task_statuses: fromTaskStatus.State;\n    time_daily_signoffs: fromTimeDailySignoff.State;\n    time_entries: fromTimeEntry.State;\n    users: fromUser.State;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n    clients: fromClient.reducer,\n    filters: fromFilter.reducer,\n    jobs: fromJob.reducer,\n    me: fromMe.reducer,\n    tasks: fromTask.reducer,\n    task_assignees: fromTaskAssignee.reducer,\n    task_notes: fromTaskNote.reducer,\n    task_statuses: fromTaskStatus.reducer,\n    time_daily_signoffs: fromTimeDailySignoff.reducer,\n    time_entries: fromTimeEntry.reducer,\n    users: fromUser.reducer\n};\n\nexport const getClientState = createFeatureSelector<fromClient.State>('clients');\nexport const getFilterState = createFeatureSelector<fromFilter.State>('filters');\nexport const getJobState = createFeatureSelector<fromJob.State>('jobs');\nexport const getMeState = createFeatureSelector<fromMe.State>('me');\nexport const getTaskState = createFeatureSelector<fromTask.State>('tasks');\nexport const getTaskAssigneeState = createFeatureSelector<fromTaskAssignee.State>('task_assignees');\nexport const getTaskNoteState = createFeatureSelector<fromTaskNote.State>('task_notes');\nexport const getTaskStatusState = createFeatureSelector<fromTaskStatus.State>('task_statuses');\nexport const getTimeDailySignoffState = createFeatureSelector<fromTimeDailySignoff.State>('time_daily_signoffs');\nexport const getTimeEntryState = createFeatureSelector<fromTimeEntry.State>('time_entries');\nexport const getUserState = createFeatureSelector<fromUser.State>('users');\n","import * as moment from 'moment';\n\nexport const getDatesBetween = (from: Date, to: Date) => {\n    const dateArray = [];\n    let currentDate = moment(from);\n    const stopDate = moment(to);\n    while (currentDate <= stopDate) {\n        dateArray.push( moment(currentDate).toDate() )\n        currentDate = moment(currentDate).add(1, 'days');\n    }\n    return dateArray;\n}\n\nexport const valueOr = (value: any, ifNull: any = '') => {\n    return value ? value : ifNull;\n};","export const environment = {\n  production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}