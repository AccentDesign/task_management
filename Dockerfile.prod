### STAGE 1: Build the frontend application ###

# Label as 'builder' to reference in stage 2
FROM        node:alpine as builder

# Install required system packages
RUN         apk add --no-cache curl git

COPY        frontend/package.json ./

COPY        frontend/package-lock.json ./

RUN         npm set progress=false && npm config set depth 0 && npm cache clean --force

# Storing node modules on a separate layer will prevent unnecessary npm installs at each build
RUN         npm i && mkdir /ng-app && cp -R ./node_modules ./ng-app

WORKDIR     /ng-app

COPY        frontend .

# Build the angular app in production mode
RUN         npm run build:prod


### STAGE 2: Setup Django ###

# Dockerfile
FROM        python:3.6-alpine

# Build args
ARG         REQUIREMENTS_FILE=/build/requirements/base.txt

# Copy in your requirements folder
ADD         requirements /build/requirements/

# Install runtime, build & python dependencies
RUN         set -ex \
            && apk update \
            && apk add --no-cache \
                # postgres
                libpq \
                postgresql-client \
                # pillow
                jpeg-dev \
                zlib-dev \
                # misc
                make \
                supervisor \
            && apk add --no-cache --virtual .build-deps \
                gcc \
                git \
                libc-dev \
                libffi-dev \
                linux-headers \
                musl-dev \
                postgresql-dev \
                python3-dev \
            && pip install --no-cache-dir -r $REQUIREMENTS_FILE \
            && apk del .build-deps

# Copy your application code to the container
RUN         mkdir /code/
WORKDIR     /code/
ADD         . /code/

# From 'builder' stage copy over the artifacts in dist folder to default static folder
COPY        --from=builder /static/frontend /code/static/dist/js/frontend

# Add any custom, static environment variables needed by Django:
ENV         PYTHONUNBUFFERED=1 \
            DJANGO_SETTINGS_MODULE=app.settings \
            SECRET_KEY='***** change me *****' \
            ALLOWED_HOSTS=* \
            RDS_HOSTNAME=db \
            RDS_PORT=5432 \
            RDS_DB_NAME=postgres \
            RDS_USERNAME=postgres \
            RDS_PASSWORD=password \
            EMAIL_HOST=mail \
            EMAIL_PORT=1025 \
            EMAIL_HOST_USER=user \
            EMAIL_HOST_PASSWORD=password

# Docker entrypoint:
ENV         DJANGO_MANAGEPY_MIGRATE=on \
            DJANGO_MANAGEPY_COLLECTSTATIC=on

ENTRYPOINT  ["/code/docker-entrypoint.sh"]

# Start uWSGI:
CMD         ["supervisord", "-c", "/code/supervisord.conf"]
